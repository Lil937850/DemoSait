{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.js","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","dialogs","dialogsItems","dialog","active","messages","message","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","_React$Component","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","apply","arguments","_inherits","_createClass","key","value","props","React","createElement","Navigate","to","connect","DialogItem","path","id","className","concat","s","NavLink","name","Message","Dialogs","dialogsPage","dialogsElements","map","d","messagesElements","m","newMessageBody","onChange","e","body","target","updateNewMessageBody","placeholder","onClick","sendMessage","compose","dispatch","sendMessageCreator","updateNewMessageBodyCreator"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,QAAA,yBAAAC,aAAA,8BAAAC,OAAA,wBAAAC,OAAA,wBAAAC,SAAA,0BAAAC,QAAA,qKCGdC,EAA6B,SAACC,GAAK,MAAM,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAc,IACrCC,EAAiB,SAAAC,GAAA,SAAAD,IAAA,OAAAE,YAAAC,KAAAH,GAAAI,YAAAD,KAAAE,YAAAL,GAAAM,MAAAH,KAAAI,YAIlB,OAJkBC,YAAAR,EAAAC,GAAAQ,YAAAT,EAAA,EAAAU,IAAA,SAAAC,MAAA,WAEf,OAAKR,KAAKS,MAAMhB,OACTiB,IAAAC,cAACf,EAAcI,KAAKS,OADIC,IAAAC,cAACC,IAAQ,CAACC,GAAI,eAEhDhB,EAJkB,CAASa,IAAMd,WAStC,OAFqCkB,YAAQvB,EAARuB,CAAoCjB,iGCH9DkB,EATI,SAACN,GAChB,IAAIO,EAAO,YAAcP,EAAMQ,GAE/B,OAAOP,IAAAC,cAAA,OAAKO,UAAS,GAAAC,OAAKC,IAAEjC,OAAM,KAAAgC,OAAIC,IAAEhC,SACpCsB,IAAAC,cAACU,IAAO,CAACR,GAAIG,GAAOP,EAAMa,QCYnBC,EAjBC,SAACd,GAUb,OACIC,IAAAC,cAAA,WACID,IAAAC,cAAA,OAAKO,UAAWE,IAAEjC,QAASsB,EAAMnB,QAAQ,cCuDtCkC,EA9DC,SAACf,GAQb,IAAIjB,EAAQiB,EAAMgB,YAEdC,EAAkBlC,EAAMP,QAAQ0C,IAAM,SAAAC,GAAC,OAAIlB,IAAAC,cAACI,EAAU,CAACO,KAAMM,EAAEN,KAAMf,IAAKqB,EAAEX,GAAIA,GAAIW,EAAEX,OAEtFY,EAAmBrC,EAAMH,SAASsC,IAAK,SAAAG,GAAC,OAAIpB,IAAAC,cAACY,EAAO,CAACjC,QAASwC,EAAExC,QAASiB,IAAKuB,EAAEb,OAEhFc,EAAiBvC,EAAMuC,eAY3B,OAAKtB,EAAMhB,OAIPiB,IAAAC,cAAA,OAAKO,UAAWE,IAAEnC,SACdyB,IAAAC,cAAA,OAAKO,UAAWE,IAAElC,cAEbwC,GAQLhB,IAAAC,cAAA,OAAKO,UAAWE,IAAE/B,UAEdqB,IAAAC,cAAA,WAAMkB,GACNnB,IAAAC,cAAA,WACID,IAAAC,cAAA,WAAKD,IAAAC,cAAA,YAAUH,MAAOuB,EACPC,SA1BN,SAACC,GACtB,IAAIC,EAAOD,EAAEE,OAAO3B,MACpBC,EAAM2B,qBAAqBF,IAyBAG,YAAY,sBAAqB,MAChD3B,IAAAC,cAAA,WAAKD,IAAAC,cAAA,UAAQ2B,QAhCJ,WACrB7B,EAAM8B,gBA+BgD,YAtBhC7B,IAAAC,cAACC,IAAQ,CAACC,GAAI,oCCQ7B2B,sBACX1B,YAlBkB,SAACtB,GACjB,MAAO,CACDiC,YAAajC,EAAMiC,cAIN,SAACgB,GACpB,MAAO,CACDF,YAAa,WACPE,EAASC,gBAEfN,qBAAsB,SAACF,GACjBO,EAASE,YAA4BT,QAOnDvC,IAFW6C,CAGbhB","file":"static/js/1.b322c1d3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__CaH_a\",\"dialogsItems\":\"Dialogs_dialogsItems__13RNa\",\"dialog\":\"Dialogs_dialog__324ME\",\"active\":\"Dialogs_active__NcJjq\",\"messages\":\"Dialogs_messages__saM1D\",\"message\":\"Dialogs_message__3e3dR\"};","import React from \"react\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Navigate to={\"/Login\"}/>\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n}","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id\r\n\r\n    return <div className={`${s.dialog} ${s.active}`}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>;\r\n}\r\n\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n\r\n    // let newMessageElement = React.createRef()\r\n    //\r\n    // let addMessage = () => {\r\n    //     let text = newMessageElement.current.value;\r\n    //     alert(text);\r\n    // }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.dialog}>{props.message} </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import React from \"react\";\r\nimport s from './Dialogs.module.css';\r\n// import {NavLink} from \"react-router-dom\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {Navigate} from \"react-router-dom\";\r\n\r\n\r\nconst Dialogs = (props) => {\r\n\r\n/*\r\n    let dialogsElements = props.dialogs.map ( d => <DialogItem name={d.name} id={d.id} />)\r\n\r\n    let messagesElements = props.messages.map (m => <Message message={m.message} />)\r\n*/\r\n\r\n    let state = props.dialogsPage\r\n\r\n    let dialogsElements = state.dialogs.map ( d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n\r\n    let messagesElements = state.messages.map (m => <Message message={m.message} key={m.id}/>)\r\n\r\n    let newMessageBody = state.newMessageBody\r\n\r\n    let onSendMessageClick = () => {\r\n        props.sendMessage()\r\n    }\r\n\r\n    let onNewMessageChange = (e) => {\r\n        let body = e.target.value\r\n        props.updateNewMessageBody(body)\r\n        // props.store.dispatch(updateNewMessageBodyCreator (body))\r\n    }\r\n\r\n    if (!props.isAuth) return <Navigate to={\"/login\"}/>\r\n\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {dialogsElements}\r\n\r\n                {/*<DialogItem name={dialogs [0].name} id={dialogs [0].id} />\r\n                <DialogItem name={dialogs [1].name} id={dialogs [1].id} />\r\n                <DialogItem name={dialogs [2].name} id={dialogs [2].id} />*/}\r\n\r\n                {/*<div className={s.dialog + '' + s.active}>*/}\r\n            </div>\r\n            <div className={s.messages}>\r\n\r\n                <div>{messagesElements}</div>\r\n                <div>\r\n                    <div><textarea value={newMessageBody}\r\n                                   onChange={onNewMessageChange}\r\n                                   placeholder='Enter your message'> </textarea></div>\r\n                    <div><button onClick={onSendMessageClick}>Send</button></div>\r\n                </div>\r\n\r\n                {/* <Message message={messages [0].message}  />\r\n                <Message message={messages [1].message}  />*/}\r\n\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Dialogs\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//FORM\r\n\r\n//\r\n// import React from \"react\";\r\n// import s from './Dialogs.module.css';\r\n// import DialogItem from \"./DialogItem/DialogItem\";\r\n// import Message from \"./Message/Message\";\r\n// import {Navigate} from \"react-router-dom\";\r\n// import {Field} from \"formik\";\r\n//\r\n//\r\n// const Dialogs = (props) => {\r\n//\r\n//        let state = props.dialogsPage\r\n//\r\n//     let dialogsElements = state.dialogs.map ( d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n//\r\n//     let messagesElements = state.messages.map (m => <Message message={m.message} key={m.id}/>)\r\n//\r\n//     let newMessageBody = state.newMessageBody\r\n//\r\n//\r\n//     let addNewMessage = (values) => {\r\n//         props.sendMessage(values.newMessageBody)\r\n//        }\r\n//\r\n//     if (!props.isAuth) return <Navigate to={\"/login\"}/>\r\n//\r\n//\r\n//     return (\r\n//         <div className={s.dialogs}>\r\n//             <div className={s.dialogsItems}>\r\n//\r\n//                 {dialogsElements}\r\n//\r\n//             </div>\r\n//             <div className={s.messages}>\r\n//\r\n//                 <div>{messagesElements}</div>\r\n//\r\n//             </div>\r\n//             <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n//         </div>\r\n//\r\n//     )\r\n//\r\n// }\r\n//\r\n//const maxLength30=maxLengthCreator(30)\r\n// const AddMessageForm = (props) => {\r\n//     return (\r\n//         <form onSubmit={props.handleSubmit}>\r\n//             <div>\r\n//                 <Field component={Textarea}\r\n//                        validate={[required, maxLength30]}\r\n//                        placeholder={'Enter your message'} name={\"newMessageBody\"}/>\r\n//                 </div>\r\n//             <div><button>Send</button></div>\r\n//         </form>\r\n//     )\r\n// }\r\n//\r\n// const AddMessageFormRedux=reduxForm ({form:\"dialogAddMessageForm\"})(AddMessageForm)\r\n//\r\n// export default Dialogs","import React from \"react\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redax/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n// const DialogsContainer = () => {\r\n//       return <StoreContext.Consumer>\r\n//             { store => {\r\n//             let onSendMessageClick = () => {\r\n//                 store.dispatch(sendMessageCreator());\r\n//             }\r\n//             let onNewMessageChange = (body) => {\r\n//                 store.dispatch(updateNewMessageBodyCreator(body));\r\n//             }\r\n//             return <Dialogs updateNewMessageBody={onNewMessageChange}\r\n//                             sendMessage={onSendMessageClick}\r\n//                             dialogsPage={store.getState().dialogsPage}/>\r\n//         }\r\n//     }\r\n//       </StoreContext.Consumer>\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n      return {\r\n            dialogsPage: state.dialogsPage,\r\n      }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n      return {\r\n            sendMessage: () => {\r\n                  dispatch(sendMessageCreator());\r\n            },\r\n            updateNewMessageBody: (body) => {\r\n                  dispatch(updateNewMessageBodyCreator(body));\r\n            }\r\n      }\r\n}\r\n\r\nexport default compose(\r\n    connect (mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n// let AuthRedirectComponent = withAuthRedirect (Dialogs);\r\n//\r\n// const DialogsContainer = connect (mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n//\r\n// export default DialogsContainer\r\n\r\n\r\n\r\n\r\n\r\n// const DialogsContainer = (props) => {\r\n//     let state = props.store.getState().dialogsPage\r\n//\r\n//     let onSendMessageClick = () => {\r\n//         props.store.dispatch(sendMessageCreator())\r\n//     }\r\n//\r\n//     let onNewMessageChange = (body) => {\r\n//         props.store.dispatch(updateNewMessageBodyCreator (body))\r\n//     }\r\n//\r\n//     return (<Dialogs updateNewMessageBody={onNewMessageChange} sendMessage={onSendMessageClick}\r\n//                      dialogsPage={state}/>)\r\n// }\r\n//\r\n// export default DialogsContainer\r\n\r\n\r\n\r\n\r\n//FORM\r\n\r\n\r\n// import React from \"react\";\r\n// import {sendMessageCreator} from \"../../redax/dialogs-reducer\";\r\n// import Dialogs from \"./Dialogs\";\r\n// import {connect} from \"react-redux\";\r\n// import {Navigate} from \"react-router-dom\";\r\n// import {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n// import {compose} from \"redux\";\r\n//\r\n//\r\n// let mapStateToProps = (state) => {\r\n//       return {\r\n//             dialogsPage: state.dialogsPage,\r\n//       }\r\n// }\r\n//\r\n// let mapDispatchToProps = (dispatch) => {\r\n//       return {\r\n//             sendMessage: (newMessageBody) => {\r\n//                   dispatch(sendMessageCreator(newMessageBody));\r\n//             }\r\n//       }\r\n// }\r\n//\r\n// export default compose(\r\n//     connect (mapStateToProps, mapDispatchToProps),\r\n//     withAuthRedirect\r\n// )(Dialogs)\r\n"],"sourceRoot":""}