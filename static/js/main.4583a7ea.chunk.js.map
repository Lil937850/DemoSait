{"version":3,"sources":["components/Navbar/Navbar.module.css","api/api.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","components/Header/Header.module.css","redax/profile-reducer.js","redax/dialogs-reducer.js","components/Users/users.module.css","assets/images/user.png","assets/images/preloader1.svg","components/Navbar/Navbar.jsx","utils/object-helpers.js","redax/users-reducer.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redax/users-selectors.js","components/Users/UsersContainer.jsx","components/Header/Header.jsx","redax/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redax/app-reducer.js","redax/sidebar-reducer.js","redax/redux-store.js","hoc/withSuspense.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","nav","item","active","__webpack_require__","d","__webpack_exports__","usersAPI","profileAPI","authAPI","instance","axios","create","withCredentials","baseURL","headers","API-KEY","getUsers","currentPage","arguments","length","undefined","pageSize","get","concat","then","response","data","follow","userId","post","unfollow","delete","getProfile","console","warn","getStatus","updateStatus","status","put","me","login","email","password","rememberMe","logout","Preloader","props","React","createElement","style","backgroundColor","src","preloader1","formControl","error","formSummaryError","paginator","pageNumber","selectedPage","header","loginBlock","_regeneratorRuntime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","unwrapped","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","initialState","posts","id","message","likesCount","newPostText","profile","addPostActionCreator","setStatus","getUserProfile","_ref","_asyncToGenerator","_callee","dispatch","_context","_x","apply","_ref2","_callee2","_context2","_x2","_ref3","_callee3","_context3","resultCode","_x3","updateNewPostTextActionCreator","text","newText","profileReducer","action","newPost","_objectSpread","_toConsumableArray","filter","p","dialogs","messages","newMessageBody","sendMessageCreator","updateNewMessageBodyCreator","body","dialogsReducer","userPhoto","Navbar","className","s","NavLink","to","navData","isActive","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","fake","followSuccess","unfollowSuccess","setCurrentPages","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","apiMethod","actionCreator","_x4","_x5","usersReducer","followed","count","Paginator","totalItemsCount","onPageChanged","_ref$portionSize","portionSize","pagesCount","Math","ceil","pages","portionCount","_useState","useState","_useState2","_slicedToArray","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","onClick","cn","_defineProperty","e","User","user","photos","small","disabled","some","Users","_objectWithoutProperties","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","_React$Component","_getPrototypeOf2","_this","_classCallCheck","_len","args","Array","_key","_possibleConstructorReturn","_getPrototypeOf","requestUsers","_inherits","_createClass","_this$props","Fragment","Component","compose","connect","bind","_x6","_ref4","_callee4","_context4","_x7","page","totalCount","Header","isAuth","setAuthUserData","payload","getAuthUserData","_response$data$data","_login","authReducer","HeaderContainer","auth","LoginForm","placeholder","onSubmit","formData","initialized","appReducer","sidebarReducer","reducers","combineReducers","profilePage","dialogsPage","sidebar","app","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","__store__","withSuspense","Suspense","fallback","DialogsContainer","lazy","ProfileContainer","DialogContainerWithSuspense","ProfileContainerWithSuspense","App","initializeApp","Routes","Route","path","element","Login","AppContainer","location","useLocation","navigate","useNavigate","params","useParams","assign","router","promise","all","SamuraiJSApp","BrowserRouter","Provider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render"],"mappings":"4EACAA,EAAAC,QAAA,CAAkBC,IAAA,oBAAAC,KAAA,qBAAAC,OAAA,yDCDlBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAAJ,EAAAC,EAAAC,EAAA,sBAAAG,IAAA,IAGMC,EAHNN,EAAA,IAGiBO,EAAMC,OAAO,CAC1BC,iBAAiB,EACjBC,QAAS,gDACTC,QAAS,CACLC,UAAW,0CAINT,EAAW,CACpBU,SAAQ,WAAiC,IAAhCC,EAAWC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,EAAGG,EAAQH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GACjC,OAAOT,EAASa,IAAG,cAAAC,OAAeN,EAAW,WAAAM,OAAUF,IAClDG,KAAK,SAAAC,GACF,OAAOA,EAASC,QAG5BC,OAAM,SAACC,GACH,OAAOnB,EAASoB,KAAI,UAAAN,OAAWK,KAEnCE,SAAQ,SAACF,GACL,OAAOnB,EAASsB,OAAM,UAAAR,OAAWK,KAErCI,WAAU,SAACJ,GAEP,OADAK,QAAQC,KAAM,8CACP3B,EAAWyB,WAAWJ,KAKxBrB,EAAa,CACtByB,WAAU,SAACJ,GACP,OAAOnB,EAASa,IAAG,WAAAC,OAAYK,KAEnCO,UAAS,SAACP,GACN,OAAOnB,EAASa,IAAG,kBAAAC,OAAmBK,KAE1CQ,aAAY,SAACC,GACT,OAAO5B,EAAS6B,IAAG,iBAAmB,CAACD,OAAQA,MAO1C7B,EAAU,CAClB+B,GAAE,WACH,OAAO9B,EAASa,IAAG,YAEnBkB,MAAK,SAACC,EAAOC,GAA4B,IAAlBC,EAAUzB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC7B,OAAOT,EAASoB,KAAI,aAAe,CAACY,QAAOC,WAAUC,gBAEzDC,OAAM,WACF,OAAOnC,EAASsB,OAAM,sFC7Cfc,IALD,SAACC,GACf,OAAOC,IAAAC,cAAA,OAAKC,MAAQ,CAACC,gBAAiB,UACtCH,IAAAC,cAAA,OAAKG,IAAKC,4BCLVtD,EAAAC,QAAA,CAAkBsD,YAAA,mCAAAC,MAAA,6BAAAC,iBAAA,6DCAlBzD,EAAAC,QAAA,CAAkByD,UAAA,6BAAAC,WAAA,8BAAAC,aAAA,qDCAlB5D,EAAAC,QAAA,CAAkB4D,OAAA,uBAAAC,WAAA,4QCAlBC,EAAA,kBAAA9D,GAAA,IAAAA,EAAA,GAAA+D,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,OAAAgB,eAAAH,EAAAC,EAAA,CAAAC,QAAAE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAN,EAAAC,GAAA,IAAAF,EAAA,aAAAQ,GAAAR,EAAA,SAAAC,EAAAC,EAAAC,GAAA,OAAAF,EAAAC,GAAAC,GAAA,SAAAM,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAApD,OAAA8E,EAAAzB,WAAA4B,EAAA,IAAAC,EAAAL,GAAA,WAAAG,EAAAG,QAAA,SAAAT,EAAAE,EAAAK,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAxB,EAAAE,EAAAK,GAAA,cAAAgB,EAAAE,KAAA,IAAAf,EAAAH,EAAAmB,KAAA,6BAAAH,EAAAX,MAAAM,EAAA,gBAAAzB,MAAA8B,EAAAX,IAAAc,KAAAnB,EAAAmB,MAAA,UAAAH,EAAAE,OAAAf,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAZ,EAAAE,EAAAK,GAAAD,EAAA,SAAAkB,EAAAG,EAAApC,EAAAqB,GAAA,WAAAa,KAAA,SAAAb,IAAAe,EAAAC,KAAArC,EAAAqB,IAAA,MAAAd,GAAA,OAAA2B,KAAA,QAAAb,IAAAd,IAAApF,EAAAqF,OAAA,IAAAmB,EAAA,YAAAb,KAAA,SAAAwB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzC,EAAAyC,EAAA/C,EAAA,kBAAAgD,OAAA,IAAAC,EAAAvD,OAAAwD,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1D,GAAAG,EAAAgD,KAAAO,EAAAnD,KAAA+C,EAAAI,GAAA,IAAAE,EAAAP,EAAAnD,UAAA0B,EAAA1B,UAAAD,OAAApD,OAAAyG,GAAA,SAAAO,EAAA3D,GAAA,0BAAA4D,QAAA,SAAA5B,GAAArB,EAAAX,EAAAgC,EAAA,SAAAC,GAAA,OAAAoB,KAAAvB,QAAAE,EAAAC,OAAA,SAAA4B,EAAAlC,EAAAmC,GAAA,IAAAC,EAAAV,KAAAvB,QAAA,SAAAE,EAAAC,GAAA,SAAA+B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAnC,EAAAC,EAAAgC,EAAAC,GAAA,IAAAtB,EAAAC,EAAAlB,EAAAK,GAAAL,EAAAM,GAAA,aAAAW,EAAAE,KAAA,KAAAsB,EAAAxB,EAAAX,IAAAnB,EAAAsD,EAAAtD,MAAA,OAAAA,GAAA,iBAAAA,GAAAb,EAAAgD,KAAAnC,EAAA,WAAAgD,EAAAG,QAAAnD,EAAAuD,SAAA7G,KAAA,SAAAsD,GAAAqD,EAAA,OAAArD,EAAAmD,EAAAC,IAAA,SAAA/C,GAAAgD,EAAA,QAAAhD,EAAA8C,EAAAC,KAAAJ,EAAAG,QAAAnD,GAAAtD,KAAA,SAAA8G,GAAAF,EAAAtD,MAAAwD,EAAAL,EAAAG,IAAA,SAAA9E,GAAA,OAAA6E,EAAA,QAAA7E,EAAA2E,EAAAC,OAAAtB,EAAAX,KAAAkC,CAAAnC,EAAAC,EAAAgC,EAAAC,KAAA,OAAAH,MAAAvG,KAAAwG,UAAA,SAAA1B,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA9B,SAAAsB,EAAAI,QAAA,QAAA5E,IAAA4E,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA9B,SAAAiE,SAAA3C,EAAAI,OAAA,SAAAJ,EAAAK,SAAA7E,EAAAkF,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAuC,UAAA,yDAAAjC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA9B,SAAAsB,EAAAK,KAAA,aAAAW,EAAAE,KAAA,OAAAlB,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAkC,EAAA7B,EAAAX,IAAA,OAAAwC,IAAA1B,MAAAnB,EAAAQ,EAAAsC,YAAAD,EAAA3D,MAAAc,EAAA+C,KAAAvC,EAAAwC,QAAA,WAAAhD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAA7E,GAAAwE,EAAAQ,SAAA,KAAAG,GAAAkC,GAAA7C,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAuC,UAAA,oCAAA5C,EAAAQ,SAAA,KAAAG,GAAA,SAAAsC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAzB,KAAA+B,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAnC,EAAAmC,EAAAQ,YAAA,GAAA3C,EAAAE,KAAA,gBAAAF,EAAAX,IAAA8C,EAAAQ,WAAA3C,EAAA,SAAAf,EAAAL,GAAA6B,KAAA+B,WAAA,EAAAJ,OAAA,SAAAxD,EAAAoC,QAAAiB,EAAAxB,WAAAmC,OAAA,YAAA/B,EAAAgC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAAzC,KAAAwC,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAtI,QAAA,KAAAyI,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAtI,QAAA,GAAA8C,EAAAgD,KAAAwC,EAAAG,GAAA,OAAAjB,EAAA7D,MAAA2E,EAAAG,GAAAjB,EAAA5B,MAAA,EAAA4B,EAAA,OAAAA,EAAA7D,WAAA1D,EAAAuH,EAAA5B,MAAA,EAAA4B,GAAA,OAAAA,UAAA,OAAAA,KAAAxC,GAAA,SAAAA,IAAA,OAAArB,WAAA1D,EAAA2F,MAAA,UAAAG,EAAAlD,UAAAmD,EAAAxC,EAAA+C,EAAA,cAAAP,GAAAxC,EAAAwC,EAAA,cAAAD,KAAA2C,YAAAlF,EAAAwC,EAAA1C,EAAA,qBAAA1E,EAAA+J,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA9C,GAAA,uBAAA8C,EAAAH,aAAAG,EAAAE,QAAAnK,EAAAoK,KAAA,SAAAJ,GAAA,OAAAhG,OAAAqG,eAAArG,OAAAqG,eAAAL,EAAA5C,IAAA4C,EAAAM,UAAAlD,EAAAxC,EAAAoF,EAAAtF,EAAA,sBAAAsF,EAAA/F,UAAAD,OAAApD,OAAA+G,GAAAqC,GAAAhK,EAAAuK,MAAA,SAAArE,GAAA,OAAAoC,QAAApC,IAAA0B,EAAAE,EAAA7D,WAAAW,EAAAkD,EAAA7D,UAAAO,EAAA,kBAAA8C,OAAAtH,EAAA8H,gBAAA9H,EAAAwK,MAAA,SAAAlF,EAAAC,EAAAC,EAAAC,EAAAsC,QAAA,IAAAA,MAAA0C,SAAA,IAAAC,EAAA,IAAA5C,EAAAzC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAsC,GAAA,OAAA/H,EAAA+J,oBAAAxE,GAAAmF,IAAA9B,OAAAnH,KAAA,SAAA4G,GAAA,OAAAA,EAAArB,KAAAqB,EAAAtD,MAAA2F,EAAA9B,UAAAhB,EAAAD,GAAA/C,EAAA+C,EAAAjD,EAAA,aAAAE,EAAA+C,EAAArD,EAAA,kBAAAgD,OAAA1C,EAAA+C,EAAA,mDAAA3H,EAAA2K,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAA7F,KAAA8F,EAAAD,EAAArB,KAAAxE,GAAA,OAAA6F,EAAAE,UAAA,SAAAjC,IAAA,KAAA+B,EAAAvJ,QAAA,KAAA0D,EAAA6F,EAAAG,MAAA,GAAAhG,KAAA8F,EAAA,OAAAhC,EAAA7D,MAAAD,EAAA8D,EAAA5B,MAAA,EAAA4B,EAAA,OAAAA,EAAA5B,MAAA,EAAA4B,IAAA5I,EAAA0H,SAAA5B,EAAA7B,UAAA,CAAAiG,YAAApE,EAAA2D,MAAA,SAAAsB,GAAA,GAAAzD,KAAA0D,KAAA,EAAA1D,KAAAsB,KAAA,EAAAtB,KAAAb,KAAAa,KAAAZ,WAAArF,EAAAiG,KAAAN,MAAA,EAAAM,KAAAjB,SAAA,KAAAiB,KAAArB,OAAA,OAAAqB,KAAApB,SAAA7E,EAAAiG,KAAA+B,WAAAxB,QAAA0B,IAAAwB,EAAA,QAAAZ,KAAA7C,KAAA,MAAA6C,EAAAc,OAAA,IAAA/G,EAAAgD,KAAAI,KAAA6C,KAAAP,OAAAO,EAAAe,MAAA,MAAA5D,KAAA6C,QAAA9I,IAAA8J,KAAA,WAAA7D,KAAAN,MAAA,MAAAoE,EAAA9D,KAAA+B,WAAA,GAAAG,WAAA,aAAA4B,EAAArE,KAAA,MAAAqE,EAAAlF,IAAA,OAAAoB,KAAA+D,MAAA1E,kBAAA,SAAA2E,GAAA,GAAAhE,KAAAN,KAAA,MAAAsE,EAAA,IAAAzF,EAAAyB,KAAA,SAAAiE,EAAAC,EAAAC,GAAA,OAAA5E,EAAAE,KAAA,QAAAF,EAAAX,IAAAoF,EAAAzF,EAAA+C,KAAA4C,EAAAC,IAAA5F,EAAAI,OAAA,OAAAJ,EAAAK,SAAA7E,KAAAoK,EAAA,QAAA5B,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAAhD,EAAAmC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA3B,KAAA0D,KAAA,KAAAU,EAAAxH,EAAAgD,KAAA8B,EAAA,YAAA2C,EAAAzH,EAAAgD,KAAA8B,EAAA,iBAAA0C,GAAAC,EAAA,IAAArE,KAAA0D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA5B,KAAA0D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAApE,KAAA0D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAAxF,MAAA,6CAAAmB,KAAA0D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAvC,OAAA,SAAAG,EAAAb,GAAA,QAAA2D,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAA,GAAAb,EAAAC,QAAA3B,KAAA0D,MAAA9G,EAAAgD,KAAA8B,EAAA,eAAA1B,KAAA0D,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAA7E,GAAA,aAAAA,IAAA6E,EAAA3C,QAAA/C,MAAA0F,EAAAzC,aAAAyC,EAAA,UAAA/E,EAAA+E,IAAApC,WAAA,UAAA3C,EAAAE,OAAAF,EAAAX,MAAA0F,GAAAtE,KAAArB,OAAA,OAAAqB,KAAAsB,KAAAgD,EAAAzC,WAAA3C,GAAAc,KAAAuE,SAAAhF,IAAAgF,SAAA,SAAAhF,EAAAuC,GAAA,aAAAvC,EAAAE,KAAA,MAAAF,EAAAX,IAAA,gBAAAW,EAAAE,MAAA,aAAAF,EAAAE,KAAAO,KAAAsB,KAAA/B,EAAAX,IAAA,WAAAW,EAAAE,MAAAO,KAAA+D,KAAA/D,KAAApB,IAAAW,EAAAX,IAAAoB,KAAArB,OAAA,SAAAqB,KAAAsB,KAAA,kBAAA/B,EAAAE,MAAAqC,IAAA9B,KAAAsB,KAAAQ,GAAA5C,GAAAsF,OAAA,SAAA3C,GAAA,QAAAU,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA7B,KAAAuE,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAxC,IAAAuF,MAAA,SAAA9C,GAAA,QAAAY,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAApC,EAAAmC,EAAAQ,WAAA,aAAA3C,EAAAE,KAAA,KAAAiF,EAAAnF,EAAAX,IAAAqD,EAAAP,GAAA,OAAAgD,GAAA,UAAA7F,MAAA,0BAAA8F,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAAvB,KAAAjB,SAAA,CAAA9B,SAAAmD,EAAAgC,GAAAf,aAAAE,WAAA,SAAAvB,KAAArB,SAAAqB,KAAApB,SAAA7E,GAAAmF,IAAAxG,EACA,IAMIkM,EAAe,CACfC,MAAO,CACH,CAACC,GAAI,EAAGC,QAAS,kBAAmBC,WAAY,IAChD,CAACF,GAAI,EAAGC,QAAS,oBAAqBC,WAAY,IAClD,CAACF,GAAI,EAAGC,QAAS,UAAWC,WAAY,IACxC,CAACF,GAAI,EAAGC,QAAS,WAAYC,WAAY,IACzC,CAACF,GAAI,EAAGC,QAAS,gBAAiBC,WAAY,KAElDC,YAAa,mBACbC,QAAS,KACTlK,OAAQ,IA8CCmK,EAAuB,WAAH,MAAU,CAAC1F,KA9D3B,aAgEJ2F,EAAY,SAACpK,GAAM,MAAM,CAACyE,KA7DpB,aA6DsCzE,WAG5CqK,EAAiB,SAAC9K,GAAM,sBAAA+K,EAAAC,YAAA/I,IAAAsG,KAAK,SAAA0C,EAAOC,GAAQ,IAAArL,EAAA,OAAAoC,IAAAuB,KAAA,SAAA2H,GAAA,cAAAA,EAAAhC,KAAAgC,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EAC9BrI,IAAS0B,WAAWJ,GAAO,OAA5CH,EAAQsL,EAAAvG,KACFsG,EAN4B,CAAChG,KA7DpB,mBA6D4CyF,QAM5B9K,EAASC,OAAO,wBAAAqL,EAAA7B,SAAA2B,MACpD,gBAAAG,GAAA,OAAAL,EAAAM,MAAA5F,KAAAnG,YAHgC,IAKxBiB,EAAY,SAACP,GAAM,sBAAAsL,EAAAN,YAAA/I,IAAAsG,KAAK,SAAAgD,EAAOL,GAAQ,IAAArL,EAAA,OAAAoC,IAAAuB,KAAA,SAAAgI,GAAA,cAAAA,EAAArC,KAAAqC,EAAAzE,MAAA,cAAAyE,EAAAzE,KAAA,EAC5BpI,IAAW4B,UAAUP,GAAO,OAA7CH,EAAQ2L,EAAA5G,KACHsG,EAAUL,EAAUhL,EAASC,OAAO,wBAAA0L,EAAAlC,SAAAiC,MAC/C,gBAAAE,GAAA,OAAAH,EAAAD,MAAA5F,KAAAnG,YAH+B,IAKnBkB,EAAe,SAACC,GAAM,sBAAAiL,EAAAV,YAAA/I,IAAAsG,KAAK,SAAAoD,EAAOT,GAAQ,OAAAjJ,IAAAuB,KAAA,SAAAoI,GAAA,cAAAA,EAAAzC,KAAAyC,EAAA7E,MAAA,cAAA6E,EAAA7E,KAAA,EAC9BpI,IAAW6B,aAAaC,GAAO,OACZ,IAD5BmL,EAAAhH,KACQ9E,KAAK+L,YACjBX,EAAUL,EAAUpK,IACpB,wBAAAmL,EAAAtC,SAAAqC,MACX,gBAAAG,GAAA,OAAAJ,EAAAL,MAAA5F,KAAAnG,YALkC,IAiCtByM,EAAiC,SAACC,GAAI,MAC9C,CAAC9G,KA9GuB,uBA8GK+G,QAASD,IAE5BE,IA9FQ,WAAkC,IAAjC/H,EAAK7E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG+K,EAAc8B,EAAM7M,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQ2M,EAAOjH,MACX,IArBS,WAsBL,IAAIkH,EAAU,CACV7B,GAAI,EACJC,QAASrG,EAAMuG,YACfD,WAAY,GAEhB,OAAA4B,YAAA,GACOlI,EAAK,CACRmG,MAAK,GAAA3K,OAAA2M,YAAMnI,EAAMmG,OAAK,CAAE8B,IACxB1B,YAAc,MAItB,IAjCqB,uBAkCjB,OAAA2B,YAAA,GACOlI,EAAK,CACRuG,YAAayB,EAAOF,UAI5B,IAtCW,aAuCP,OAAAI,YAAA,GACOlI,EAAK,CACR1D,OAAQ0L,EAAO1L,SAIvB,IA9CiB,mBA+Cb,OAAA4L,YAAA,GAAWlI,EAAK,CAAEwG,QAASwB,EAAOxB,UAGtC,IAhDY,cAiDR,OAAA0B,YAAA,GAAWlI,EAAK,CAAEmG,MAAOnG,EAAMmG,MAAMiC,OAAO,SAAAC,GAAC,OAAEA,EAAEjC,IAAM4B,EAAOlM,KAAKsK,OAGvE,QACI,OAAOpG,wHCxDfkG,EAAe,CACfoC,QAAS,CACL,CAAClC,GAAI,EAAGjC,KAAM,UACd,CAACiC,GAAI,EAAGjC,KAAM,UACd,CAACiC,GAAI,EAAGjC,KAAM,SACd,CAACiC,GAAI,EAAGjC,KAAM,SACd,CAACiC,GAAI,EAAGjC,KAAM,UACd,CAACiC,GAAI,EAAGjC,KAAM,WAElBoE,SAAU,CACN,CAACnC,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,4BACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,MACjB,CAACD,GAAI,EAAGC,QAAS,OAErBmC,eAAgB,IAsBPC,EAAqB,WAAH,MAAU,CAAC1H,KAxCrB,iBAyCR2H,EAA8B,SAACC,GAAI,MAC3C,CAAC5H,KA3C0B,0BA2CK4H,KAAMA,IAG5BC,IAxBQ,WAAkC,IAAjC5I,EAAK7E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG+K,EAAc8B,EAAM7M,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQ2M,EAAOjH,MACX,IAxBwB,0BAyBpB,OAAAmH,YAAA,GACOlI,EAAK,CACRwI,eAAgBR,EAAOW,OAE/B,IA5Ba,eA6BT,IAAIA,EAAO3I,EAAMwI,eACjB,OAAAN,YAAA,GACOlI,EAAK,CACRwI,eAAgB,GAChBD,SAAQ,GAAA/M,OAAA2M,YAAMnI,EAAMuI,UAAQ,CAAE,CAACnC,GAAI,EAAGC,QAASsC,OAEvD,QACI,OAAO3I,wBCpCnBjG,EAAAC,QAAA,CAAkB6O,UAAA,8CCDlB9O,EAAAC,QAAiBI,EAAAiO,EAAuB,qDCAxCtO,EAAAC,QAAiBI,EAAAiO,EAAuB,kRC6BzBS,EAzBA,WACX,OACI9L,IAAAC,cAAA,OAAK8L,UAAWC,IAAE/O,KAClB+C,IAAAC,cAAA,OAAK8L,UAAWC,IAAE9O,MACd8C,IAAAC,cAACgM,IAAO,CAACC,GAAG,WAAWH,UAAc,SAAAI,GAAO,OAAIA,EAAQC,SAAWJ,IAAE7O,OAAS6O,IAAE9O,OAAO,YAE3F8C,IAAAC,cAAA,OAAK8L,UAAS,GAAAvN,OAAKwN,IAAE9O,KAAI,KAAAsB,OAAIwN,IAAE7O,SAC3B6C,IAAAC,cAACgM,IAAO,CAACC,GAAG,WAAWH,UAAc,SAAAI,GAAO,OAAIA,EAAQC,SAAWJ,IAAE7O,OAAS6O,IAAE9O,OAAO,aAE3F8C,IAAAC,cAAA,OAAK8L,UAAWC,IAAE9O,MACd8C,IAAAC,cAACgM,IAAO,CAACC,GAAG,QAAQH,UAAc,SAAAI,GAAO,OAAIA,EAAQC,SAAWJ,IAAE7O,OAAS6O,IAAE9O,OAAO,SAExF8C,IAAAC,cAAA,OAAK8L,UAAWC,IAAE9O,MACd8C,IAAAC,cAACgM,IAAO,CAACC,GAAG,SAASH,UAAc,SAAAI,GAAO,OAAIA,EAAQC,SAAWJ,IAAE7O,OAAS6O,IAAE9O,OAAO,UAEzF8C,IAAAC,cAAA,OAAK8L,UAAWC,IAAE9O,MACd8C,IAAAC,cAACgM,IAAO,CAACC,GAAG,YAAYH,UAAc,SAAAI,GAAO,OAAIA,EAAQC,SAAWJ,IAAE7O,OAAS6O,IAAE9O,OAAO,aAExF8C,IAAAC,cAAA,OAAK8L,UAAWC,IAAE9O,MACd8C,IAAAC,cAACgM,IAAO,CAACC,GAAG,SAASH,UAAc,SAAAI,GAAO,OAAIA,EAAQC,SAAWJ,IAAE7O,OAAS6O,IAAE9O,OAAO,yDCtBvFmP,EAAsB,SAACC,EAAOC,EAAQC,EAAaC,GAC7D,OAAOH,EAAMI,IAAK,SAAAC,GACd,OAAIA,EAAEH,KAAiBD,EACnBrB,YAAA,GAAWyB,EAAC,CAAEF,gBAEXE,kBCLf7L,EAAA,kBAAA9D,GAAA,IAAAA,EAAA,GAAA+D,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,OAAAgB,eAAAH,EAAAC,EAAA,CAAAC,QAAAE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAN,EAAAC,GAAA,IAAAF,EAAA,aAAAQ,GAAAR,EAAA,SAAAC,EAAAC,EAAAC,GAAA,OAAAF,EAAAC,GAAAC,GAAA,SAAAM,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAApD,OAAA8E,EAAAzB,WAAA4B,EAAA,IAAAC,EAAAL,GAAA,WAAAG,EAAAG,QAAA,SAAAT,EAAAE,EAAAK,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAxB,EAAAE,EAAAK,GAAA,cAAAgB,EAAAE,KAAA,IAAAf,EAAAH,EAAAmB,KAAA,6BAAAH,EAAAX,MAAAM,EAAA,gBAAAzB,MAAA8B,EAAAX,IAAAc,KAAAnB,EAAAmB,MAAA,UAAAH,EAAAE,OAAAf,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAZ,EAAAE,EAAAK,GAAAD,EAAA,SAAAkB,EAAAG,EAAApC,EAAAqB,GAAA,WAAAa,KAAA,SAAAb,IAAAe,EAAAC,KAAArC,EAAAqB,IAAA,MAAAd,GAAA,OAAA2B,KAAA,QAAAb,IAAAd,IAAApF,EAAAqF,OAAA,IAAAmB,EAAA,YAAAb,KAAA,SAAAwB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzC,EAAAyC,EAAA/C,EAAA,kBAAAgD,OAAA,IAAAC,EAAAvD,OAAAwD,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1D,GAAAG,EAAAgD,KAAAO,EAAAnD,KAAA+C,EAAAI,GAAA,IAAAE,EAAAP,EAAAnD,UAAA0B,EAAA1B,UAAAD,OAAApD,OAAAyG,GAAA,SAAAO,EAAA3D,GAAA,0BAAA4D,QAAA,SAAA5B,GAAArB,EAAAX,EAAAgC,EAAA,SAAAC,GAAA,OAAAoB,KAAAvB,QAAAE,EAAAC,OAAA,SAAA4B,EAAAlC,EAAAmC,GAAA,IAAAC,EAAAV,KAAAvB,QAAA,SAAAE,EAAAC,GAAA,SAAA+B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAnC,EAAAC,EAAAgC,EAAAC,GAAA,IAAAtB,EAAAC,EAAAlB,EAAAK,GAAAL,EAAAM,GAAA,aAAAW,EAAAE,KAAA,KAAAsB,EAAAxB,EAAAX,IAAAnB,EAAAsD,EAAAtD,MAAA,OAAAA,GAAA,iBAAAA,GAAAb,EAAAgD,KAAAnC,EAAA,WAAAgD,EAAAG,QAAAnD,EAAAuD,SAAA7G,KAAA,SAAAsD,GAAAqD,EAAA,OAAArD,EAAAmD,EAAAC,IAAA,SAAA/C,GAAAgD,EAAA,QAAAhD,EAAA8C,EAAAC,KAAAJ,EAAAG,QAAAnD,GAAAtD,KAAA,SAAA8G,GAAAF,EAAAtD,MAAAwD,EAAAL,EAAAG,IAAA,SAAA9E,GAAA,OAAA6E,EAAA,QAAA7E,EAAA2E,EAAAC,OAAAtB,EAAAX,KAAAkC,CAAAnC,EAAAC,EAAAgC,EAAAC,KAAA,OAAAH,MAAAvG,KAAAwG,UAAA,SAAA1B,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA9B,SAAAsB,EAAAI,QAAA,QAAA5E,IAAA4E,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA9B,SAAAiE,SAAA3C,EAAAI,OAAA,SAAAJ,EAAAK,SAAA7E,EAAAkF,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAuC,UAAA,yDAAAjC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA9B,SAAAsB,EAAAK,KAAA,aAAAW,EAAAE,KAAA,OAAAlB,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAkC,EAAA7B,EAAAX,IAAA,OAAAwC,IAAA1B,MAAAnB,EAAAQ,EAAAsC,YAAAD,EAAA3D,MAAAc,EAAA+C,KAAAvC,EAAAwC,QAAA,WAAAhD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAA7E,GAAAwE,EAAAQ,SAAA,KAAAG,GAAAkC,GAAA7C,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAuC,UAAA,oCAAA5C,EAAAQ,SAAA,KAAAG,GAAA,SAAAsC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAzB,KAAA+B,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAnC,EAAAmC,EAAAQ,YAAA,GAAA3C,EAAAE,KAAA,gBAAAF,EAAAX,IAAA8C,EAAAQ,WAAA3C,EAAA,SAAAf,EAAAL,GAAA6B,KAAA+B,WAAA,EAAAJ,OAAA,SAAAxD,EAAAoC,QAAAiB,EAAAxB,WAAAmC,OAAA,YAAA/B,EAAAgC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAAzC,KAAAwC,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAtI,QAAA,KAAAyI,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAtI,QAAA,GAAA8C,EAAAgD,KAAAwC,EAAAG,GAAA,OAAAjB,EAAA7D,MAAA2E,EAAAG,GAAAjB,EAAA5B,MAAA,EAAA4B,EAAA,OAAAA,EAAA7D,WAAA1D,EAAAuH,EAAA5B,MAAA,EAAA4B,GAAA,OAAAA,UAAA,OAAAA,KAAAxC,GAAA,SAAAA,IAAA,OAAArB,WAAA1D,EAAA2F,MAAA,UAAAG,EAAAlD,UAAAmD,EAAAxC,EAAA+C,EAAA,cAAAP,GAAAxC,EAAAwC,EAAA,cAAAD,KAAA2C,YAAAlF,EAAAwC,EAAA1C,EAAA,qBAAA1E,EAAA+J,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA9C,GAAA,uBAAA8C,EAAAH,aAAAG,EAAAE,QAAAnK,EAAAoK,KAAA,SAAAJ,GAAA,OAAAhG,OAAAqG,eAAArG,OAAAqG,eAAAL,EAAA5C,IAAA4C,EAAAM,UAAAlD,EAAAxC,EAAAoF,EAAAtF,EAAA,sBAAAsF,EAAA/F,UAAAD,OAAApD,OAAA+G,GAAAqC,GAAAhK,EAAAuK,MAAA,SAAArE,GAAA,OAAAoC,QAAApC,IAAA0B,EAAAE,EAAA7D,WAAAW,EAAAkD,EAAA7D,UAAAO,EAAA,kBAAA8C,OAAAtH,EAAA8H,gBAAA9H,EAAAwK,MAAA,SAAAlF,EAAAC,EAAAC,EAAAC,EAAAsC,QAAA,IAAAA,MAAA0C,SAAA,IAAAC,EAAA,IAAA5C,EAAAzC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAsC,GAAA,OAAA/H,EAAA+J,oBAAAxE,GAAAmF,IAAA9B,OAAAnH,KAAA,SAAA4G,GAAA,OAAAA,EAAArB,KAAAqB,EAAAtD,MAAA2F,EAAA9B,UAAAhB,EAAAD,GAAA/C,EAAA+C,EAAAjD,EAAA,aAAAE,EAAA+C,EAAArD,EAAA,kBAAAgD,OAAA1C,EAAA+C,EAAA,mDAAA3H,EAAA2K,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAA7F,KAAA8F,EAAAD,EAAArB,KAAAxE,GAAA,OAAA6F,EAAAE,UAAA,SAAAjC,IAAA,KAAA+B,EAAAvJ,QAAA,KAAA0D,EAAA6F,EAAAG,MAAA,GAAAhG,KAAA8F,EAAA,OAAAhC,EAAA7D,MAAAD,EAAA8D,EAAA5B,MAAA,EAAA4B,EAAA,OAAAA,EAAA5B,MAAA,EAAA4B,IAAA5I,EAAA0H,SAAA5B,EAAA7B,UAAA,CAAAiG,YAAApE,EAAA2D,MAAA,SAAAsB,GAAA,GAAAzD,KAAA0D,KAAA,EAAA1D,KAAAsB,KAAA,EAAAtB,KAAAb,KAAAa,KAAAZ,WAAArF,EAAAiG,KAAAN,MAAA,EAAAM,KAAAjB,SAAA,KAAAiB,KAAArB,OAAA,OAAAqB,KAAApB,SAAA7E,EAAAiG,KAAA+B,WAAAxB,QAAA0B,IAAAwB,EAAA,QAAAZ,KAAA7C,KAAA,MAAA6C,EAAAc,OAAA,IAAA/G,EAAAgD,KAAAI,KAAA6C,KAAAP,OAAAO,EAAAe,MAAA,MAAA5D,KAAA6C,QAAA9I,IAAA8J,KAAA,WAAA7D,KAAAN,MAAA,MAAAoE,EAAA9D,KAAA+B,WAAA,GAAAG,WAAA,aAAA4B,EAAArE,KAAA,MAAAqE,EAAAlF,IAAA,OAAAoB,KAAA+D,MAAA1E,kBAAA,SAAA2E,GAAA,GAAAhE,KAAAN,KAAA,MAAAsE,EAAA,IAAAzF,EAAAyB,KAAA,SAAAiE,EAAAC,EAAAC,GAAA,OAAA5E,EAAAE,KAAA,QAAAF,EAAAX,IAAAoF,EAAAzF,EAAA+C,KAAA4C,EAAAC,IAAA5F,EAAAI,OAAA,OAAAJ,EAAAK,SAAA7E,KAAAoK,EAAA,QAAA5B,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAAhD,EAAAmC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA3B,KAAA0D,KAAA,KAAAU,EAAAxH,EAAAgD,KAAA8B,EAAA,YAAA2C,EAAAzH,EAAAgD,KAAA8B,EAAA,iBAAA0C,GAAAC,EAAA,IAAArE,KAAA0D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA5B,KAAA0D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAApE,KAAA0D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAAxF,MAAA,6CAAAmB,KAAA0D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAvC,OAAA,SAAAG,EAAAb,GAAA,QAAA2D,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAA,GAAAb,EAAAC,QAAA3B,KAAA0D,MAAA9G,EAAAgD,KAAA8B,EAAA,eAAA1B,KAAA0D,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAA7E,GAAA,aAAAA,IAAA6E,EAAA3C,QAAA/C,MAAA0F,EAAAzC,aAAAyC,EAAA,UAAA/E,EAAA+E,IAAApC,WAAA,UAAA3C,EAAAE,OAAAF,EAAAX,MAAA0F,GAAAtE,KAAArB,OAAA,OAAAqB,KAAAsB,KAAAgD,EAAAzC,WAAA3C,GAAAc,KAAAuE,SAAAhF,IAAAgF,SAAA,SAAAhF,EAAAuC,GAAA,aAAAvC,EAAAE,KAAA,MAAAF,EAAAX,IAAA,gBAAAW,EAAAE,MAAA,aAAAF,EAAAE,KAAAO,KAAAsB,KAAA/B,EAAAX,IAAA,WAAAW,EAAAE,MAAAO,KAAA+D,KAAA/D,KAAApB,IAAAW,EAAAX,IAAAoB,KAAArB,OAAA,SAAAqB,KAAAsB,KAAA,kBAAA/B,EAAAE,MAAAqC,IAAA9B,KAAAsB,KAAAQ,GAAA5C,GAAAsF,OAAA,SAAA3C,GAAA,QAAAU,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA7B,KAAAuE,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAxC,IAAAuF,MAAA,SAAA9C,GAAA,QAAAY,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAApC,EAAAmC,EAAAQ,WAAA,aAAA3C,EAAAE,KAAA,KAAAiF,EAAAnF,EAAAX,IAAAqD,EAAAP,GAAA,OAAAgD,GAAA,UAAA7F,MAAA,0BAAA8F,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAAvB,KAAAjB,SAAA,CAAA9B,SAAAmD,EAAAgC,GAAAf,aAAAE,WAAA,SAAAvB,KAAArB,SAAAqB,KAAApB,SAAA7E,GAAAmF,IAAAxG,EAEA,IAQIkM,EAAe,CACf0D,MAAO,GACPtO,SAAU,GACVuO,gBAAiB,EACjB3O,YAAa,EACb4O,YAAY,EACZC,oBAAqB,GACrBC,KAAM,IA4DGC,EAAgB,SAACpO,GAAM,MAAM,CAACkF,KA3E5B,SA2E0ClF,WAC5CqO,EAAkB,SAACrO,GAAM,MAAM,CAACkF,KA3E5B,WA2E4ClF,WAEhDsO,EAAkB,SAACjP,GAAW,MAAM,CAAC6F,KA3EzB,mBA2EiD7F,gBAE7DkP,EAAmB,SAACN,GAAU,MAAM,CAAC/I,KA3EvB,qBA2EiD+I,eAC/DO,EAA0B,SAACP,EAAYjO,GAAM,MAAM,CAACkF,KA3E5B,+BA2EgE+I,aAAYjO,WAc3GyO,EAAkB,eAAAnD,EAAAN,YAAA/I,IAAAsG,KAAG,SAAAgD,EAAOL,EAAUlL,EAAQ0O,EAAWC,GAAa,OAAA1M,IAAAuB,KAAA,SAAAgI,GAAA,cAAAA,EAAArC,KAAAqC,EAAAzE,MAAA,OACxB,OAAhDmE,EAAUsD,GAAwB,EAAMxO,IAAQwL,EAAAzE,KAAA,EAC3B2H,EAAU1O,GAAO,OACN,GADpBwL,EAAA5G,KACC9E,KAAK+L,YACdX,EAAUyD,EAAc3O,IAE5BkL,EAAUsD,GAAwB,EAAOxO,IAAQ,wBAAAwL,EAAAlC,SAAAiC,MACpD,gBAPuBE,EAAAK,EAAA8C,EAAAC,GAAA,OAAAvD,EAAAD,MAAA5F,KAAAnG,YAAA,GAsBTwP,EAlGM,WAAkC,IAAjC3K,EAAK7E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG+K,EAAc8B,EAAM7M,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC9C,OAAQ2M,EAAOjH,MACX,IArBO,SAsBH,OAAAmH,YAAA,GACOlI,EAAK,CACR4J,MAAOP,EAAoBrJ,EAAM4J,MAAO5B,EAAOnM,OAAQ,KAAK,CAAC+O,UAAU,MAS/E,IAhCS,WAiCL,OAAA1C,YAAA,GACOlI,EAAK,CACR4J,MAAOP,EAAoBrJ,EAAM4J,MAAO5B,EAAOnM,OAAQ,KAAK,CAAC+O,UAAU,MAS/E,IA3CU,YA4CN,OAAA1C,YAAA,GAAWlI,EAAK,CAAE4J,MAAM5B,EAAO4B,QAGnC,IA9CiB,mBA+Cb,OAAA1B,YAAA,GAAWlI,EAAK,CAAE9E,YAAa8M,EAAO9M,cAG1C,IAjDsB,wBAkDlB,OAAAgN,YAAA,GAAWlI,EAAK,CAAE6J,gBAAiB7B,EAAO6C,QAG9C,IApDmB,qBAqDf,OAAA3C,YAAA,GAAWlI,EAAK,CAAE8J,WAAY9B,EAAO8B,aAGzC,IAvD6B,+BAwDzB,OAAA5B,YAAA,GACOlI,EAAK,CACR+J,oBAAoB/B,EAAO8B,WAAU,GAAAtO,OAAA2M,YAC3BnI,EAAM+J,qBAAmB,CAAE/B,EAAOnM,SACtCmE,EAAM+J,oBAAoB3B,OAAO,SAAAhC,GAAE,OAAIA,GAAM4B,EAAOnM,WAGlE,QACI,OAAOmE,4DC1BI8K,EA3CP,SAAHlE,GAKT,IAL4F,IAA9EmE,EAAenE,EAAfmE,gBAAiBzP,EAAQsL,EAARtL,SAAUJ,EAAW0L,EAAX1L,YAAa8P,EAAapE,EAAboE,cAAaC,EAAArE,EAAEsE,mBAAW,IAAAD,EAAG,GAAEA,EAEjFE,EAAaC,KAAKC,KAAKN,EAAkBzP,GAEzCgQ,EAAQ,GACHzH,EAAI,EAAGA,GAAKsH,EAAYtH,IAC7ByH,EAAMhI,KAAKO,GAGf,IAAI0H,EAAeH,KAAKC,KAAKF,EAAaD,GAAaM,EACfC,mBAAS,GAAEC,EAAAC,YAAAH,EAAA,GAA9CI,EAAaF,EAAA,GAAEG,EAAgBH,EAAA,GAChCI,GAAyBF,EAAgB,GAAKV,EAAc,EAC5Da,EAAyBH,EAAgBV,EAG7C,OAAOlO,IAAAC,cAAA,OAAK8L,UAAWiD,IAAOvO,WACzBmO,EAAgB,GACb5O,IAAAC,cAAA,UAAQgP,QAAS,WACbJ,EAAiBD,EAAgB,KAClC,UAENN,EACIlD,OAAQ,SAAAC,GAAC,OAAIA,GAAKyD,GAAyBzD,GAAK0D,IAChDrC,IAAI,SAACrB,GACN,OAAOrL,IAAAC,cAAA,QAAM8L,UAAWmD,IAAEC,YAAA,GACzBH,IAAOrO,aAAezC,IAAgBmN,GACxC2D,IAAOtO,YACNoB,IAAKuJ,EACL4D,QAAS,SAACG,GACVpB,EAAc3C,KACdA,KAEHkD,EAAeK,GACZ5O,IAAAC,cAAA,UAAQgP,QAAS,WACjBJ,EAAiBD,EAAgB,KAClC,8CCHIS,EA9BJ,SAAHzF,GAAsD,IAAjD0F,EAAI1F,EAAJ0F,KAAMvC,EAAmBnD,EAAnBmD,oBAAqBhO,EAAQ6K,EAAR7K,SAAUH,EAAMgL,EAANhL,OAElD,OAAcoB,IAAAC,cAAA,WACED,IAAAC,cAAA,YACID,IAAAC,cAAA,WACID,IAAAC,cAACgM,IAAO,CAACC,GAAI,gBAAkBoD,EAAKlG,IACpCpJ,IAAAC,cAAA,OAAKG,IAA0B,MAArBkP,EAAKC,OAAOC,MAAgBF,EAAKC,OAAOC,MAAQ3D,IAAWE,UAAWiD,IAAOnD,cAG3F7L,IAAAC,cAAA,WACKqP,EAAK1B,SACA5N,IAAAC,cAAA,UAAQwP,SAAU1C,EAAoB2C,KAAK,SAAAtG,GAAE,OAAEA,IAAKkG,EAAKlG,KAAK6F,QAAS,WAAOlQ,EAASuQ,EAAKlG,MAAM,cAClGpJ,IAAAC,cAAA,UAAQwP,SAAU1C,EAAoB2C,KAAK,SAAAtG,GAAE,OAAEA,IAAKkG,EAAKlG,KAAK6F,QAAS,WAAOrQ,EAAO0Q,EAAKlG,MAAM,cAGlHpJ,IAAAC,cAAA,YACQD,IAAAC,cAAA,YACED,IAAAC,cAAA,WAAK,IAAEqP,EAAKnI,MACVnH,IAAAC,cAAA,WAAK,IAAEqP,EAAKhQ,SAEhBU,IAAAC,cAAA,YACAD,IAAAC,cAAA,WAAM,yBACND,IAAAC,cAAA,WAAM,0BCPX0P,EAjBH,SAAH/F,GAAkG,IAA7FtL,EAAQsL,EAARtL,SAA2BuO,GAAFjD,EAAfmE,gBAAgCnE,EAAfiD,iBAAiB3O,EAAW0L,EAAX1L,YAAa8P,EAAapE,EAAboE,cAAepB,EAAKhD,EAALgD,MAAU7M,EAAK6P,YAAAhG,EAAA,wFAEjG,OAAO5J,IAAAC,cAAA,WACHD,IAAAC,cAAC6N,EAAS,CAAC5P,YAAaA,EAAa8P,cAAeA,EAAeD,gBAAiBlB,EACzEvO,SAAUA,IACrB0B,IAAAC,cAAA,WACK2M,EAAMF,IAAI,SAAAC,GAAC,OAAI3M,IAAAC,cAACoP,EAAI,CAACC,KAAM3C,EACNI,oBAAqBhN,EAAMgN,oBAC3BhO,SAAUgB,EAAMhB,SAChBH,OAAQmB,EAAMnB,OACdkD,IAAK6K,EAAEvD,kCCJ5BnL,EAAW4R,YAJC,SAAC7M,GACtB,OAAOA,EAAM8M,UAAUlD,OAG+B,SAACA,GACvD,OAAOA,EAAMxB,OAAO,SAAAuB,GAAC,OAAE,MAadoD,EAAc,SAAC/M,GACxB,OAAOA,EAAM8M,UAAUxR,UAGd0R,EAAqB,SAAChN,GAC/B,OAAOA,EAAM8M,UAAUjD,iBAGdoD,EAAiB,SAACjN,GAC3B,OAAOA,EAAM8M,UAAU5R,aAGdgS,EAAgB,SAAClN,GAC1B,OAAOA,EAAM8M,UAAUhD,YAGdqD,GAAyB,SAACnN,GACnC,OAAOA,EAAM8M,UAAU/C,qBCrBrBqD,GAAc,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,YAAAlM,KAAA8L,GAAA,QAAAK,EAAAtS,UAAAC,OAAAsS,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAzS,UAAAyS,GA8Bf,OA9BeL,EAAAM,YAAAvM,MAAAgM,EAAAQ,YAAAV,IAAAlM,KAAAgG,MAAAoG,EAAA,CAAAhM,MAAA9F,OAAAkS,MAoBhB1C,cAAgB,SAACtN,GAAe,IACrBpC,EAAYiS,EAAKxQ,MAAjBzB,SACPiS,EAAKxQ,MAAMgR,aAAarQ,EAAYpC,IAQvCiS,EAgBA,OA9CeS,YAAAZ,EAAAC,GA8BfY,YAAAb,EAAA,EAAAtO,IAAA,oBA1BDC,MAAA,WAEoB,IAAAmP,EACe5M,KAAKvE,MAA7B7B,EAAWgT,EAAXhT,YAAYI,EAAQ4S,EAAR5S,SACnBgG,KAAKvE,MAAMgR,aAAa7S,EAAaI,KASxC,CAAAwD,IAAA,SAAAC,MAAA,WAgBG,OAAO/B,IAAAC,cAAAD,IAAAmR,SAAA,KACF7M,KAAKvE,MAAM+M,WAAa9M,IAAAC,cAACH,IAAS,MAAK,KACxCE,IAAAC,cAAC0P,EAAK,CAAC9C,gBAAiBvI,KAAKvE,MAAM8M,gBACzBvO,SAAUgG,KAAKvE,MAAMzB,SACrBJ,YAAaoG,KAAKvE,MAAM7B,YACxB8P,cAAe1J,KAAK0J,cACpBpB,MAAOtI,KAAKvE,MAAM6M,MAClBhO,OAAQ0F,KAAKvE,MAAMnB,OACnBG,SAAUuF,KAAKvE,MAAMhB,SAExBgO,oBAAqBzI,KAAKvE,MAAMgN,2BAG9CqD,EA9Ce,CAASpQ,IAAMoR,WAoGpBC,eAEXC,YA1CkB,SAACtO,GACnB,MAAO,CAEH4J,MAAO3O,EAAS+E,GAChB1E,SAAUyR,EAAY/M,GACtB6J,gBAAiBmD,EAAmBhN,GACpC9E,YAAa+R,EAAejN,GAC5B8J,WAAYoD,EAAclN,GAC1B+J,oBAAqBoD,GAAuBnN,KAmC5C,CAACpE,OLhBa,SAACC,GACnB,sBAAA0L,EAAAV,YAAA/I,IAAAsG,KAAO,SAAAoD,EAAOT,GAAQ,OAAAjJ,IAAAuB,KAAA,SAAAoI,GAAA,cAAAA,EAAAzC,KAAAyC,EAAA7E,MAAA,OAClB0H,EAAmBvD,EAAUlL,EAAQtB,IAASqB,OAAO2S,KAAKhU,KAAW0P,GAAc,wBAAAxC,EAAAtC,SAAAqC,MACtF,gBAAAgH,GAAA,OAAAjH,EAAAL,MAAA5F,KAAAnG,YAFD,IKeaY,SLVO,SAACF,GACrB,sBAAA4S,EAAA5H,YAAA/I,IAAAsG,KAAO,SAAAsK,EAAO3H,GAAQ,OAAAjJ,IAAAuB,KAAA,SAAAsP,GAAA,cAAAA,EAAA3J,KAAA2J,EAAA/L,MAAA,OAClB0H,EAAmBvD,EAAUlL,EAAOtB,IAASwB,SAASwS,KAAKhU,KAAW2P,GAAgB,wBAAAyE,EAAAxJ,SAAAuJ,MACzF,gBAAAE,GAAA,OAAAH,EAAAvH,MAAA5F,KAAAnG,YAFD,IKUQgP,kBAAiBE,0BAAyB0D,aLtC1B,SAACc,EAAMvT,GAC/B,sBAAAsL,EAAAC,YAAA/I,IAAAsG,KAAO,SAAA0C,EAAOC,GAAQ,IAAApL,EAAA,OAAAmC,IAAAuB,KAAA,SAAA2H,GAAA,cAAAA,EAAAhC,KAAAgC,EAAApE,MAAA,OAEe,OADrCmE,EAAUqD,GAAiB,IACvBrD,EAAUoD,EAAgB0E,IAAO7H,EAAApE,KAAA,EACpBrI,IAASU,SAAS4T,EAAMvT,GAAS,OAA9CK,EAAIqL,EAAAvG,KACAsG,EAAUqD,GAAiB,IAC3BrD,EAZwB,CAAChG,KA3EnB,YA2EoC6I,MAYvBjO,EAAK2N,QACxBvC,EAX4C,CAAChG,KA3E3B,wBA2EwD8J,MAW7ClP,EAAKmT,aAAa,wBAAA9H,EAAA7B,SAAA2B,MAC1D,gBAAAG,GAAA,OAAAL,EAAAM,MAAA5F,KAAAnG,YAPG,MKiCWkT,CAKbjB,wBC7Ga2B,GAZA,SAAChS,GACZ,OAAOC,IAAAC,cAAA,UAAQ8L,UAAWC,KAAEpL,QACxBZ,IAAAC,cAAA,OAAKG,IAAI,iFAETJ,IAAAC,cAAA,OAAK8L,UAAWC,KAAEnL,YACbd,EAAMiS,OACDhS,IAAAC,cAAA,WAAK,IAAEF,EAAMN,MAAM,MAAGO,IAAAC,cAAA,UAAQgP,QAASlP,EAAMF,QAAQ,YAC/DG,IAAAC,cAACgM,IAAO,CAACC,GAAI,UAAU,0BCV/BpL,GAAA,kBAAA9D,GAAA,IAAAA,EAAA,GAAA+D,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAA,mBAAAC,cAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,yBAAAC,EAAAC,EAAAC,EAAAC,GAAA,OAAAf,OAAAgB,eAAAH,EAAAC,EAAA,CAAAC,QAAAE,YAAA,EAAAC,cAAA,EAAAC,UAAA,IAAAN,EAAAC,GAAA,IAAAF,EAAA,aAAAQ,GAAAR,EAAA,SAAAC,EAAAC,EAAAC,GAAA,OAAAF,EAAAC,GAAAC,GAAA,SAAAM,EAAAC,EAAAC,EAAAC,EAAAC,GAAA,IAAAC,EAAAH,KAAAtB,qBAAA0B,EAAAJ,EAAAI,EAAAC,EAAA5B,OAAApD,OAAA8E,EAAAzB,WAAA4B,EAAA,IAAAC,EAAAL,GAAA,WAAAG,EAAAG,QAAA,SAAAT,EAAAE,EAAAK,GAAA,IAAAG,EAAA,iCAAAC,EAAAC,GAAA,iBAAAF,EAAA,UAAAG,MAAA,iDAAAH,EAAA,cAAAC,EAAA,MAAAC,EAAA,OAAAE,IAAA,IAAAP,EAAAI,SAAAJ,EAAAK,QAAA,KAAAG,EAAAR,EAAAQ,SAAA,GAAAA,EAAA,KAAAC,EAAAC,EAAAF,EAAAR,GAAA,GAAAS,EAAA,IAAAA,IAAAE,EAAA,gBAAAF,GAAA,YAAAT,EAAAI,OAAAJ,EAAAY,KAAAZ,EAAAa,MAAAb,EAAAK,SAAA,aAAAL,EAAAI,OAAA,uBAAAD,EAAA,MAAAA,EAAA,YAAAH,EAAAK,IAAAL,EAAAc,kBAAAd,EAAAK,SAAA,WAAAL,EAAAI,QAAAJ,EAAAe,OAAA,SAAAf,EAAAK,KAAAF,EAAA,gBAAAa,EAAAC,EAAAxB,EAAAE,EAAAK,GAAA,cAAAgB,EAAAE,KAAA,IAAAf,EAAAH,EAAAmB,KAAA,6BAAAH,EAAAX,MAAAM,EAAA,gBAAAzB,MAAA8B,EAAAX,IAAAc,KAAAnB,EAAAmB,MAAA,UAAAH,EAAAE,OAAAf,EAAA,YAAAH,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,OAAA,CAAAZ,EAAAE,EAAAK,GAAAD,EAAA,SAAAkB,EAAAG,EAAApC,EAAAqB,GAAA,WAAAa,KAAA,SAAAb,IAAAe,EAAAC,KAAArC,EAAAqB,IAAA,MAAAd,GAAA,OAAA2B,KAAA,QAAAb,IAAAd,IAAApF,EAAAqF,OAAA,IAAAmB,EAAA,YAAAb,KAAA,SAAAwB,KAAA,SAAAC,KAAA,IAAAC,EAAA,GAAAzC,EAAAyC,EAAA/C,EAAA,kBAAAgD,OAAA,IAAAC,EAAAvD,OAAAwD,eAAAC,EAAAF,OAAAG,EAAA,MAAAD,OAAA1D,GAAAG,EAAAgD,KAAAO,EAAAnD,KAAA+C,EAAAI,GAAA,IAAAE,EAAAP,EAAAnD,UAAA0B,EAAA1B,UAAAD,OAAApD,OAAAyG,GAAA,SAAAO,EAAA3D,GAAA,0BAAA4D,QAAA,SAAA5B,GAAArB,EAAAX,EAAAgC,EAAA,SAAAC,GAAA,OAAAoB,KAAAvB,QAAAE,EAAAC,OAAA,SAAA4B,EAAAlC,EAAAmC,GAAA,IAAAC,EAAAV,KAAAvB,QAAA,SAAAE,EAAAC,GAAA,SAAA+B,IAAA,WAAAF,EAAA,SAAAG,EAAAC,IAAA,SAAAC,EAAAnC,EAAAC,EAAAgC,EAAAC,GAAA,IAAAtB,EAAAC,EAAAlB,EAAAK,GAAAL,EAAAM,GAAA,aAAAW,EAAAE,KAAA,KAAAsB,EAAAxB,EAAAX,IAAAnB,EAAAsD,EAAAtD,MAAA,OAAAA,GAAA,iBAAAA,GAAAb,EAAAgD,KAAAnC,EAAA,WAAAgD,EAAAG,QAAAnD,EAAAuD,SAAA7G,KAAA,SAAAsD,GAAAqD,EAAA,OAAArD,EAAAmD,EAAAC,IAAA,SAAA/C,GAAAgD,EAAA,QAAAhD,EAAA8C,EAAAC,KAAAJ,EAAAG,QAAAnD,GAAAtD,KAAA,SAAA8G,GAAAF,EAAAtD,MAAAwD,EAAAL,EAAAG,IAAA,SAAA9E,GAAA,OAAA6E,EAAA,QAAA7E,EAAA2E,EAAAC,OAAAtB,EAAAX,KAAAkC,CAAAnC,EAAAC,EAAAgC,EAAAC,KAAA,OAAAH,MAAAvG,KAAAwG,UAAA,SAAA1B,EAAAF,EAAAR,GAAA,IAAAI,EAAAI,EAAA9B,SAAAsB,EAAAI,QAAA,QAAA5E,IAAA4E,EAAA,IAAAJ,EAAAQ,SAAA,eAAAR,EAAAI,OAAA,IAAAI,EAAA9B,SAAAiE,SAAA3C,EAAAI,OAAA,SAAAJ,EAAAK,SAAA7E,EAAAkF,EAAAF,EAAAR,GAAA,UAAAA,EAAAI,QAAA,OAAAO,EAAAX,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAuC,UAAA,yDAAAjC,EAAA,IAAAK,EAAAC,EAAAb,EAAAI,EAAA9B,SAAAsB,EAAAK,KAAA,aAAAW,EAAAE,KAAA,OAAAlB,EAAAI,OAAA,QAAAJ,EAAAK,IAAAW,EAAAX,IAAAL,EAAAQ,SAAA,KAAAG,EAAA,IAAAkC,EAAA7B,EAAAX,IAAA,OAAAwC,IAAA1B,MAAAnB,EAAAQ,EAAAsC,YAAAD,EAAA3D,MAAAc,EAAA+C,KAAAvC,EAAAwC,QAAA,WAAAhD,EAAAI,SAAAJ,EAAAI,OAAA,OAAAJ,EAAAK,SAAA7E,GAAAwE,EAAAQ,SAAA,KAAAG,GAAAkC,GAAA7C,EAAAI,OAAA,QAAAJ,EAAAK,IAAA,IAAAuC,UAAA,oCAAA5C,EAAAQ,SAAA,KAAAG,GAAA,SAAAsC,EAAAC,GAAA,IAAAC,EAAA,CAAAC,OAAAF,EAAA,SAAAA,IAAAC,EAAAE,SAAAH,EAAA,SAAAA,IAAAC,EAAAG,WAAAJ,EAAA,GAAAC,EAAAI,SAAAL,EAAA,IAAAzB,KAAA+B,WAAAC,KAAAN,GAAA,SAAAO,EAAAP,GAAA,IAAAnC,EAAAmC,EAAAQ,YAAA,GAAA3C,EAAAE,KAAA,gBAAAF,EAAAX,IAAA8C,EAAAQ,WAAA3C,EAAA,SAAAf,EAAAL,GAAA6B,KAAA+B,WAAA,EAAAJ,OAAA,SAAAxD,EAAAoC,QAAAiB,EAAAxB,WAAAmC,OAAA,YAAA/B,EAAAgC,GAAA,GAAAA,EAAA,KAAAC,EAAAD,EAAApF,GAAA,GAAAqF,EAAA,OAAAA,EAAAzC,KAAAwC,GAAA,sBAAAA,EAAAd,KAAA,OAAAc,EAAA,IAAAE,MAAAF,EAAAtI,QAAA,KAAAyI,GAAA,EAAAjB,EAAA,SAAAA,IAAA,OAAAiB,EAAAH,EAAAtI,QAAA,GAAA8C,EAAAgD,KAAAwC,EAAAG,GAAA,OAAAjB,EAAA7D,MAAA2E,EAAAG,GAAAjB,EAAA5B,MAAA,EAAA4B,EAAA,OAAAA,EAAA7D,WAAA1D,EAAAuH,EAAA5B,MAAA,EAAA4B,GAAA,OAAAA,UAAA,OAAAA,KAAAxC,GAAA,SAAAA,IAAA,OAAArB,WAAA1D,EAAA2F,MAAA,UAAAG,EAAAlD,UAAAmD,EAAAxC,EAAA+C,EAAA,cAAAP,GAAAxC,EAAAwC,EAAA,cAAAD,KAAA2C,YAAAlF,EAAAwC,EAAA1C,EAAA,qBAAA1E,EAAA+J,oBAAA,SAAAC,GAAA,IAAAC,EAAA,mBAAAD,KAAAE,YAAA,QAAAD,QAAA9C,GAAA,uBAAA8C,EAAAH,aAAAG,EAAAE,QAAAnK,EAAAoK,KAAA,SAAAJ,GAAA,OAAAhG,OAAAqG,eAAArG,OAAAqG,eAAAL,EAAA5C,IAAA4C,EAAAM,UAAAlD,EAAAxC,EAAAoF,EAAAtF,EAAA,sBAAAsF,EAAA/F,UAAAD,OAAApD,OAAA+G,GAAAqC,GAAAhK,EAAAuK,MAAA,SAAArE,GAAA,OAAAoC,QAAApC,IAAA0B,EAAAE,EAAA7D,WAAAW,EAAAkD,EAAA7D,UAAAO,EAAA,kBAAA8C,OAAAtH,EAAA8H,gBAAA9H,EAAAwK,MAAA,SAAAlF,EAAAC,EAAAC,EAAAC,EAAAsC,QAAA,IAAAA,MAAA0C,SAAA,IAAAC,EAAA,IAAA5C,EAAAzC,EAAAC,EAAAC,EAAAC,EAAAC,GAAAsC,GAAA,OAAA/H,EAAA+J,oBAAAxE,GAAAmF,IAAA9B,OAAAnH,KAAA,SAAA4G,GAAA,OAAAA,EAAArB,KAAAqB,EAAAtD,MAAA2F,EAAA9B,UAAAhB,EAAAD,GAAA/C,EAAA+C,EAAAjD,EAAA,aAAAE,EAAA+C,EAAArD,EAAA,kBAAAgD,OAAA1C,EAAA+C,EAAA,mDAAA3H,EAAA2K,KAAA,SAAAC,GAAA,IAAAD,EAAA,WAAA7F,KAAA8F,EAAAD,EAAArB,KAAAxE,GAAA,OAAA6F,EAAAE,UAAA,SAAAjC,IAAA,KAAA+B,EAAAvJ,QAAA,KAAA0D,EAAA6F,EAAAG,MAAA,GAAAhG,KAAA8F,EAAA,OAAAhC,EAAA7D,MAAAD,EAAA8D,EAAA5B,MAAA,EAAA4B,EAAA,OAAAA,EAAA5B,MAAA,EAAA4B,IAAA5I,EAAA0H,SAAA5B,EAAA7B,UAAA,CAAAiG,YAAApE,EAAA2D,MAAA,SAAAsB,GAAA,GAAAzD,KAAA0D,KAAA,EAAA1D,KAAAsB,KAAA,EAAAtB,KAAAb,KAAAa,KAAAZ,WAAArF,EAAAiG,KAAAN,MAAA,EAAAM,KAAAjB,SAAA,KAAAiB,KAAArB,OAAA,OAAAqB,KAAApB,SAAA7E,EAAAiG,KAAA+B,WAAAxB,QAAA0B,IAAAwB,EAAA,QAAAZ,KAAA7C,KAAA,MAAA6C,EAAAc,OAAA,IAAA/G,EAAAgD,KAAAI,KAAA6C,KAAAP,OAAAO,EAAAe,MAAA,MAAA5D,KAAA6C,QAAA9I,IAAA8J,KAAA,WAAA7D,KAAAN,MAAA,MAAAoE,EAAA9D,KAAA+B,WAAA,GAAAG,WAAA,aAAA4B,EAAArE,KAAA,MAAAqE,EAAAlF,IAAA,OAAAoB,KAAA+D,MAAA1E,kBAAA,SAAA2E,GAAA,GAAAhE,KAAAN,KAAA,MAAAsE,EAAA,IAAAzF,EAAAyB,KAAA,SAAAiE,EAAAC,EAAAC,GAAA,OAAA5E,EAAAE,KAAA,QAAAF,EAAAX,IAAAoF,EAAAzF,EAAA+C,KAAA4C,EAAAC,IAAA5F,EAAAI,OAAA,OAAAJ,EAAAK,SAAA7E,KAAAoK,EAAA,QAAA5B,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAAhD,EAAAmC,EAAAQ,WAAA,YAAAR,EAAAC,OAAA,OAAAsC,EAAA,UAAAvC,EAAAC,QAAA3B,KAAA0D,KAAA,KAAAU,EAAAxH,EAAAgD,KAAA8B,EAAA,YAAA2C,EAAAzH,EAAAgD,KAAA8B,EAAA,iBAAA0C,GAAAC,EAAA,IAAArE,KAAA0D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,MAAA5B,KAAA0D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,iBAAA,GAAAuC,GAAA,GAAApE,KAAA0D,KAAAhC,EAAAE,SAAA,OAAAqC,EAAAvC,EAAAE,UAAA,YAAAyC,EAAA,UAAAxF,MAAA,6CAAAmB,KAAA0D,KAAAhC,EAAAG,WAAA,OAAAoC,EAAAvC,EAAAG,gBAAAvC,OAAA,SAAAG,EAAAb,GAAA,QAAA2D,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAA,GAAAb,EAAAC,QAAA3B,KAAA0D,MAAA9G,EAAAgD,KAAA8B,EAAA,eAAA1B,KAAA0D,KAAAhC,EAAAG,WAAA,KAAAyC,EAAA5C,EAAA,OAAA4C,IAAA,UAAA7E,GAAA,aAAAA,IAAA6E,EAAA3C,QAAA/C,MAAA0F,EAAAzC,aAAAyC,EAAA,UAAA/E,EAAA+E,IAAApC,WAAA,UAAA3C,EAAAE,OAAAF,EAAAX,MAAA0F,GAAAtE,KAAArB,OAAA,OAAAqB,KAAAsB,KAAAgD,EAAAzC,WAAA3C,GAAAc,KAAAuE,SAAAhF,IAAAgF,SAAA,SAAAhF,EAAAuC,GAAA,aAAAvC,EAAAE,KAAA,MAAAF,EAAAX,IAAA,gBAAAW,EAAAE,MAAA,aAAAF,EAAAE,KAAAO,KAAAsB,KAAA/B,EAAAX,IAAA,WAAAW,EAAAE,MAAAO,KAAA+D,KAAA/D,KAAApB,IAAAW,EAAAX,IAAAoB,KAAArB,OAAA,SAAAqB,KAAAsB,KAAA,kBAAA/B,EAAAE,MAAAqC,IAAA9B,KAAAsB,KAAAQ,GAAA5C,GAAAsF,OAAA,SAAA3C,GAAA,QAAAU,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAA,GAAAb,EAAAG,eAAA,OAAA7B,KAAAuE,SAAA7C,EAAAQ,WAAAR,EAAAI,UAAAG,EAAAP,GAAAxC,IAAAuF,MAAA,SAAA9C,GAAA,QAAAY,EAAAvC,KAAA+B,WAAAjI,OAAA,EAAAyI,GAAA,IAAAA,EAAA,KAAAb,EAAA1B,KAAA+B,WAAAQ,GAAA,GAAAb,EAAAC,WAAA,KAAApC,EAAAmC,EAAAQ,WAAA,aAAA3C,EAAAE,KAAA,KAAAiF,EAAAnF,EAAAX,IAAAqD,EAAAP,GAAA,OAAAgD,GAAA,UAAA7F,MAAA,0BAAA8F,cAAA,SAAAvC,EAAAf,EAAAE,GAAA,OAAAvB,KAAAjB,SAAA,CAAA9B,SAAAmD,EAAAgC,GAAAf,aAAAE,WAAA,SAAAvB,KAAArB,SAAAqB,KAAApB,SAAA7E,GAAAmF,IAAAxG,EAEA,IAEIkM,GAAe,CACfE,GAAI,KACJ1J,MAAO,KACPD,MAAO,KACPuS,QAAQ,GAkBCC,GAAkB,SAAC7I,EAAI1J,EAAOD,EAAOuS,GAAM,MAAM,CAC1DjO,KAzBkB,qCA0BlBmO,QAAS,CAAC9I,KAAI1J,QAAOD,QAAOuS,YAGnBG,GAAkB,WAAH,sBAAAvI,EAAAC,YAAA/I,KAAAsG,KAAS,SAAA0C,EAAOC,GAAQ,IAAArL,EAAA0T,EAAAhJ,EAAA1J,EAAA2S,EAAA,OAAAvR,KAAAuB,KAAA,SAAA2H,GAAA,cAAAA,EAAAhC,KAAAgC,EAAApE,MAAA,cAAAoE,EAAApE,KAAA,EAC3BnI,IAAQ+B,KAAI,OACA,KAD7Bd,EAAQsL,EAAAvG,MACC9E,KAAK+L,aAAkB0H,EACP1T,EAASC,KAAKA,KAAlCyK,EAAEgJ,EAAFhJ,GAAI1J,EAAK0S,EAAL1S,MAAOD,EAAK2S,EAAL3S,MAChBsK,EAASkI,GAAgB7I,EAAI1J,EAAOD,GAAO,KAE9C,wBAAAuK,EAAA7B,SAAA2B,MACJ,gBAAAG,GAAA,OAAAL,EAAAM,MAAA5F,KAAAnG,YAP2B,IAwCbmU,GA3DK,WAAkC,IAAjCtP,EAAK7E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG+K,GAAc8B,EAAM7M,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7C,OAAQ2M,EAAOjH,MACX,IAZc,qCAaV,OAAAmH,YAAA,GACOlI,EACAgI,EAAOkH,SAGlB,QACI,OAAOlP,IChBbuP,GAAe,SAAAlC,GAAA,SAAAkC,IAAA,OAAA/B,YAAAlM,KAAAiO,GAAA1B,YAAAvM,KAAAwM,YAAAyB,GAAArI,MAAA5F,KAAAnG,YAGpB,OAHoB6S,YAAAuB,EAAAlC,GAAAY,YAAAsB,EAAA,EAAAzQ,IAAA,SAAAC,MAAA,WAEjB,OAAO/B,IAAAC,cAAC8R,GAAWzN,KAAKvE,WAC3BwS,EAHoB,CAASvS,IAAMoR,WAUrBE,eALS,SAACtO,GAAK,MAAM,CAChCgP,OAAQhP,EAAMwP,KAAKR,OACnBvS,MAAOuD,EAAMwP,KAAK/S,QAGkB,CAACI,ODiDnB,WAAH,sBAAA0K,EAAAV,YAAA/I,KAAAsG,KAAS,SAAAoD,EAAOT,GAAQ,OAAAjJ,KAAAuB,KAAA,SAAAoI,GAAA,cAAAA,EAAAzC,KAAAyC,EAAA7E,MAAA,cAAA6E,EAAA7E,KAAA,EAClBnI,IAAQoC,SAAQ,OACI,IAD7B4K,EAAAhH,KACS9E,KAAK+L,YACdX,EAASkI,GAAgB,KAAM,KAAM,MAAM,IAC9C,wBAAAxH,EAAAtC,SAAAqC,MACZ,gBAAAG,GAAA,OAAAJ,EAAAL,MAAA5F,KAAAnG,YALkB,KCjDJmT,CAAmCiB,wBCT5CE,GAAY,SAAClS,GACf,OACIP,IAAAC,cAAA,YACID,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAOyS,YAAa,WAExB1S,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAOyS,YAAa,cAExB1S,IAAAC,cAAA,WACID,IAAAC,cAAA,SAAO8D,KAAM,aAAa,eAE7BxD,GAASP,IAAAC,cAAA,OAAK8L,UAAW7L,KAAMM,kBAAkB,gRAC7CD,GAGLP,IAAAC,cAAA,WACID,IAAAC,cAAA,cAAQ,YAuBTqR,eAAS,KAAM,CAAC7R,MFOV,SAACC,EAAOC,EAAUC,GAAU,sBAAAuK,EAAAN,YAAA/I,KAAAsG,KAAK,SAAAgD,EAAOL,GAAQ,OAAAjJ,KAAAuB,KAAA,SAAAgI,GAAA,cAAAA,EAAArC,KAAAqC,EAAAzE,MAAA,cAAAyE,EAAAzE,KAAA,EAC5CnI,IAAQgC,MAAMC,EAAOC,EAAUC,GAAW,OACtB,IAD7ByK,EAAA5G,KACS9E,KAAK+L,YACdX,EAASoI,MAKb,wBAAA9H,EAAAlC,SAAAiC,MACX,gBAAAE,GAAA,OAAAH,EAAAD,MAAA5F,KAAAnG,YATgD,KEPlCmT,CAhBD,SAACvR,GAMX,OAAOC,IAAAC,cAAA,WACHD,IAAAC,cAAA,UAAI,SACLD,IAAAC,cAACwS,GAAS,CAACE,SANG,SAACC,GACb7S,EAAMN,MAAOmT,EAASlT,MAAMkT,EAASjT,SAAUiT,EAAShT,kBC3B7DsJ,GAAe,CACf2J,aAAa,GA6BFC,GAzBI,WAAkC,IAAjC9P,EAAK7E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG+K,GACxB,QAD4C/K,UAAAC,OAAA,EAAAD,UAAA,QAAAE,GAC7B0F,MACX,IATmB,sBAUf,OAAAmH,YAAA,GACOlI,EAAK,CACR6P,aAAa,IAGrB,QACI,OAAO7P,sBCpBfkG,GAAe,GAUJ6J,GANQ,WAAkC,IAAjC/P,EAAK7E,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG+K,GAAoB/K,UAAAC,OAAA,GAAAD,UAAA,GAEhD,OAAO6E,YCGPgQ,GAAWC,YAAgB,CAC3BC,YAAYnI,KACZoI,YAAYvH,KACZwH,QAAQL,GACRjD,UAAWnC,EACX6E,KAAMF,GACNe,IAAIP,KAGFQ,GAAmBC,OAAOC,sCAAwCnC,IAClEoC,GAAQC,YAAYV,GAAUM,GAAiBK,YAAgBC,QAIrEL,OAAOM,UAAYJ,GAEJA,UCtBFK,GAAe,SAAC1C,GAGzB,OAAO,SAACrR,GACJ,OAAOC,IAAAC,cAACD,IAAM+T,SAAQ,CAACC,SAAUhU,IAAAC,cAACH,IAAS,OACvCE,IAAAC,cAAA,eACID,IAAAC,cAACmR,EAAcrR,OCOzBkU,GAAmBjU,IAAMkU,KAAK,kBAAM9W,EAAAgS,EAAA,GAAA3Q,KAAArB,EAAAmU,KAAA,YACpC4C,GAAmBnU,IAAMkU,KAAK,kBAAM9W,EAAAgS,EAAA,GAAA3Q,KAAArB,EAAAmU,KAAA,YACpC6C,GAA8BN,GAAaG,IAC3CI,GAA+BP,GAAaK,IAejD,IAEKG,GAAG,SAAAjE,GAAA,SAAAiE,IAAA,OAAA9D,YAAAlM,KAAAgQ,GAAAzD,YAAAvM,KAAAwM,YAAAwD,GAAApK,MAAA5F,KAAAnG,YAiCJ,OAjCI6S,YAAAsD,EAAAjE,GAAAY,YAAAqD,EAAA,EAAAxS,IAAA,oBAAAC,MAAA,WAGDuC,KAAKvE,MAAMwU,kBACd,CAAAzS,IAAA,SAAAC,MAAA,WAGG,OAAKuC,KAAKvE,MAAM8S,YAMZ7S,IAAAC,cAAA,OAAK8L,UAAW,eACZ/L,IAAAC,cAACsS,GAAe,MAChBvS,IAAAC,cAAC6L,EAAM,MACP9L,IAAAC,cAAA,OAAK8L,UAAW,uBAGZ/L,IAAAC,cAACuU,IAAM,KAEHxU,IAAAC,cAACwU,IAAK,CAACC,KAAK,WAAWC,QAAS3U,IAAAC,cAACmU,GAA2B,QAC5DpU,IAAAC,cAACwU,IAAK,CAACC,KAAK,aAAaC,QAAS3U,IAAAC,cAACoU,GAA4B,QAC/DrU,IAAAC,cAACwU,IAAK,CAACC,KAAK,mBAAmBC,QAAS3U,IAAAC,cAACkU,GAAgB,QAEzDnU,IAAAC,cAACwU,IAAK,CAACC,KAAK,SAASC,QAAS3U,IAAAC,cAACmQ,GAAc,QAC7CpQ,IAAAC,cAACwU,IAAK,CAACC,KAAK,SAASC,QAAS3U,IAAAC,cAAC2U,GAAK,WAjB5C5U,IAAAC,cAACH,IAAS,UAwBrBwU,EAjCI,CAAStU,IAAMoR,WAwCpByD,GAAexD,YAvDnB,SAAoBD,GAYhB,OAXA,SAAiCrR,GAC7B,IAAI+U,EAAWC,cACXC,EAAWC,cACXC,EAASC,cACb,OACInV,IAAAC,cAACmR,EAASpQ,OAAAoU,OAAA,GACFrV,EAAK,CACTsV,OAAQ,CAAEP,WAAUE,WAAUE,eAkD1C5D,YAPoB,SAACtO,GAAK,MAAM,CAChC6P,YAAa7P,EAAMqQ,IAAIR,cAME,CAAC0B,cJpDD,WAAH,OAAS,SAACxK,GAChC,IAAIuL,EAAUvL,EAASoI,MACvB1K,QAAQ8N,IAAI,CAACD,IACR7W,KAAK,WACNsL,EANiC,CAAChG,KArBf,8BIwERsN,CAIjBiD,IAUckB,GAPK,SAACzV,GACnB,OAAOC,IAAAC,cAACwV,IAAa,KAChBzV,IAAAC,cAACyV,IAAQ,CAACjC,MAAOA,IACbzT,IAAAC,cAAC4U,GAAY,SC3EVc,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCzY,EAAAgS,EAAA,GAAA3Q,KAAArB,EAAAmU,KAAA,UAAqB9S,KAAK,SAAAmL,GAAiD,IAA9CkM,EAAMlM,EAANkM,OAAQC,EAAMnM,EAANmM,OAAQC,EAAMpM,EAANoM,OAAQC,EAAMrM,EAANqM,OAAQC,EAAOtM,EAAPsM,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,MCcDO,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACDvW,IAAAC,cAACuV,GAAY,OAOjBG","file":"static/js/main.4583a7ea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3OlV2\",\"item\":\"Navbar_item__3gA4U\",\"active\":\"Navbar_active__17EVR\"};","import axios from \"axios\";\r\n\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"2eaa3d4d-4cb9-4146-871a-19abe3a12269\"\r\n    }\r\n})\r\n\r\nexport const usersAPI = {\r\n    getUsers(currentPage = 1, pageSize = 10) {\r\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(userId) {\r\n        return instance.post(`follow/${userId}`)\r\n    },\r\n    unfollow(userId) {\r\n        return instance.delete(`follow/${userId}`)\r\n    },\r\n    getProfile(userId) {\r\n        console.warn ('Obsolete method. Please profileAPI object.')\r\n        return profileAPI.getProfile(userId)\r\n    }\r\n}\r\n\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/${userId}`)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/${userId}`)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n            // .then(response => {\r\n            //     return response.data\r\n            // })\r\n    }\r\n}\r\n\r\nexport const authAPI = { //авторизация\r\n     me() {\r\n    return instance.get(`auth/me` )\r\n},\r\n    login(email, password, rememberMe=false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe} ) //вместе с пост запросом`auth/login`отправляем на сервак данные {email, password, rememberMe}\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}\r\n\r\n\r\n//\r\n// deleteUsers () {\r\n//     return axios.delete(`follow`)\r\n//         .then(response=>{\r\n//             return response.data\r\n//         })\r\n// },\r\n//\r\n// postUsers () {\r\n//     return axios.post(`follow`)\r\n//         .then(response=>{\r\n//             return response.data\r\n//         })\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import preloader1 from \"../../../assets/images/preloader1.svg\";\r\nimport React from \"react\";\r\n\r\n\r\nlet Preloader=(props) => {\r\nreturn <div style={ {backgroundColor: 'white' } }>\r\n<img src={preloader1} />\r\n</div> }\r\n\r\nexport default Preloader","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__ZD1T5\",\"error\":\"FormsControls_error__1X-Lf\",\"formSummaryError\":\"FormsControls_formSummaryError__1YZrm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__1tTER\",\"pageNumber\":\"Paginator_pageNumber__2Mzff\",\"selectedPage\":\"Paginator_selectedPage__3GiBC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3yNJ-\",\"loginBlock\":\"Header_loginBlock__3liWq\"};","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst SET_STATUS = 'SET_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'Hi, how are you', likesCount: 12},\r\n        {id: 2, message: 'Its my first post', likesCount: 11},\r\n        {id: 3, message: 'Merhaba', likesCount: 11},\r\n        {id: 4, message: 'let s go', likesCount: 11},\r\n        {id: 5, message: 'Dance with me', likesCount: 11}\r\n    ],\r\n    newPostText: 'it-kamasutra.com',\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 5,\r\n                message: state.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText : ' '\r\n            };\r\n        }\r\n\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            }\r\n        }\r\n\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile\r\n            }\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p=>p.id != action.post.id)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = () => ({type: ADD_POST})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    const response = await usersAPI.getProfile(userId)\r\n                dispatch (setUserProfile(response.data));\r\n    }\r\n\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n   let response = await profileAPI.getStatus(userId)\r\n            dispatch (setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n           if (response.data.resultCode === 0){\r\n            dispatch (setStatus(status));\r\n           }\r\n}\r\n\r\n\r\n\r\n// export const getUserProfile = (userId) => (dispatch) => {\r\n//     usersAPI.getProfile(userId)\r\n//         .then(response => {\r\n//             dispatch (setUserProfile(response.data));\r\n//         });\r\n// }\r\n//\r\n// export const getStatus = (userId) => (dispatch) => {\r\n//     profileAPI.getStatus(userId)\r\n//         .then(response => {\r\n//             dispatch (setStatus(response.data));\r\n//         });\r\n// }\r\n//\r\n// export const updateStatus = (status) => (dispatch) => {\r\n//     profileAPI.updateStatus(status)\r\n//         .then(response => {\r\n//             if (response.data.resultCode === 0){\r\n//                 dispatch (setStatus(status));\r\n//             }\r\n//         });\r\n// }\r\n\r\n\r\nexport const updateNewPostTextActionCreator = (text) =>\r\n    ({type: UPDATE_NEW_POST_TEXT, newText: text})\r\n\r\nexport default profileReducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//FORM\r\n\r\n\r\n//\r\n// import {profileAPI, usersAPI} from \"../api/api\";\r\n//\r\n// const ADD_POST = 'ADD-POST';\r\n// const SET_USER_PROFILE = 'SET_USER_PROFILE';\r\n// const SET_STATUS = 'SET_STATUS';\r\n//\r\n// let initialState = {\r\n//     posts: [\r\n//         {id: 1, message: 'Hi, how are you', likesCount: 12},\r\n//         {id: 2, message: 'Its my first post', likesCount: 11},\r\n//         {id: 3, message: 'Merhaba', likesCount: 11},\r\n//         {id: 4, message: 'let s go', likesCount: 11},\r\n//         {id: 5, message: 'Dance with me', likesCount: 11}\r\n//     ],\r\n//     profile: null,\r\n//     status: \"\"\r\n// };\r\n//\r\n// const profileReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case ADD_POST: {\r\n//             let newPost = {\r\n//                 id: 5,\r\n//                 message: action.newPostText,\r\n//                 likesCount: 0\r\n//             };\r\n//             return {\r\n//                 ...state,\r\n//                 posts: [...state.posts, newPost],\r\n//                 newPostText : ' '\r\n//             };\r\n//         }\r\n//\r\n//\r\n//         case SET_STATUS: {\r\n//             return {\r\n//                 ...state,\r\n//                 status: action.status\r\n//             }\r\n//         }\r\n//\r\n//         case SET_USER_PROFILE: {\r\n//             return {...state, profile: action.profile\r\n//             }\r\n//         }\r\n//         default:\r\n//             return state;\r\n//\r\n//     }\r\n// }\r\n//\r\n// export const addPostActionCreator = (newPostText) => ({type: ADD_POST,newPostText})\r\n// export const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n// export const setStatus = (status) => ({type: SET_STATUS, status})\r\n//\r\n// export const getUserProfile = (userId) => (dispatch) => {\r\n//     usersAPI.getProfile(userId)\r\n//         .then(response => {\r\n//             dispatch (setUserProfile(response.data));\r\n//         });\r\n// }\r\n//\r\n// export const getStatus = (userId) => (dispatch) => {\r\n//     profileAPI.getStatus(userId)\r\n//         .then(response => {\r\n//             debugger\r\n//             dispatch (setStatus(response.data));\r\n//         });\r\n// }\r\n//\r\n// export const updateStatus = (status) => (dispatch) => {\r\n//     profileAPI.updateStatus(status)\r\n//         .then(response => {\r\n//             if (response.data.resultCode === 0){\r\n//                 dispatch (setStatus(status));\r\n//             }\r\n//         });\r\n// }\r\n//\r\n//\r\n//\r\n// export default profileReducer;","const UPDATE_NEW_MESSAGE_BODY = 'UPDATE_NEW_MESSAGE_BODY';\r\nconst SEND_MESSAGE = 'SEND_MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrey'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Victor'},\r\n        {id: 6, name: 'Valera'},\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'how is your it-kamasutra'},\r\n        {id: 3, message: 'Yo'},\r\n        {id: 4, message: 'Yo'},\r\n        {id: 5, message: 'Yo'},\r\n    ],\r\n    newMessageBody: ''\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case UPDATE_NEW_MESSAGE_BODY:\r\n            return {\r\n                ...state,\r\n                newMessageBody: action.body\r\n            };\r\n        case SEND_MESSAGE:\r\n            let body = state.newMessageBody;\r\n            return {\r\n                ...state,\r\n                newMessageBody: '',\r\n                messages: [...state.messages, {id: 6, message: body}]\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const sendMessageCreator = () => ({type: SEND_MESSAGE})\r\nexport const updateNewMessageBodyCreator = (body) =>\r\n    ({type: UPDATE_NEW_MESSAGE_BODY, body: body})\r\n\r\n\r\nexport default dialogsReducer;\r\n\r\n\r\n\r\n//FORM\r\n\r\n//\r\n// const SEND_MESSAGE = 'SEND_MESSAGE';\r\n//\r\n// let initialState = {\r\n//     dialogs: [\r\n//         {id: 1, name: 'Dimych'},\r\n//         {id: 2, name: 'Andrey'},\r\n//         {id: 3, name: 'Sveta'},\r\n//         {id: 4, name: 'Sasha'},\r\n//         {id: 5, name: 'Victor'},\r\n//         {id: 6, name: 'Valera'},\r\n//     ],\r\n//     messages: [\r\n//         {id: 1, message: 'Hi'},\r\n//         {id: 2, message: 'how is your it-kamasutra'},\r\n//         {id: 3, message: 'Yo'},\r\n//         {id: 4, message: 'Yo'},\r\n//         {id: 5, message: 'Yo'},\r\n//     ]\r\n// };\r\n//\r\n// const dialogsReducer = (state = initialState, action) => {\r\n//     switch (action.type) {\r\n//         case SEND_MESSAGE:\r\n//             let body = action.newMessageBody;\r\n//             return {\r\n//                 ...state,\r\n//\r\n//                 messages: [...state.messages, {id: 6, message: body}]\r\n//             };\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\n//\r\n// export const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE,newMessageBody})\r\n//\r\n//\r\n// export default dialogsReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"users_userPhoto__12e3t\"};","module.exports = __webpack_public_path__ + \"static/media/user.638dca09.png\";","module.exports = __webpack_public_path__ + \"static/media/preloader1.16f1ab2a.svg\";","import React from \"react\";\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" className = { navData => navData.isActive ? s.active : s.item }>Profile</NavLink>\r\n        </div>\r\n        <div className={`${s.item} ${s.active}`}>\r\n            <NavLink to=\"/dialogs\" className = { navData => navData.isActive ? s.active : s.item }>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/news\" className = { navData => navData.isActive ? s.active : s.item }>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/music\" className = { navData => navData.isActive ? s.active : s.item }>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/settings\" className = { navData => navData.isActive ? s.active : s.item }>Settings</NavLink>\r\n        </div>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" className = { navData => navData.isActive ? s.active : s.item }>Users</NavLink>\r\n            </div>\r\n    </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar","\r\nexport const  updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map( u => {                        //вернет новый массив, в к-ром заменит, если найдет совпадения по такому objPropName из объекта с таким itemId, создаст копию объекта измененного и заменит старые свойства деструктуризация вот этих новых свойств нового объекта\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [],\r\n    fake: 10\r\n};\r\n\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\",{followed: true})\r\n                //           users: state.users.map( u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: true}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\",{followed: false})\r\n                // users: state.users.map(u => {\r\n                //     if (u.id === action.userId) {\r\n                //         return {...u, followed: false}\r\n                //     }\r\n                //     return u;\r\n                // })\r\n            }\r\n\r\n        case SET_USERS: {\r\n            return {...state, users:action.users }\r\n        }\r\n\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress:action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPages = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count:totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n    dispatch (toggleIsFetching(true));\r\n        dispatch (setCurrentPages(page));\r\n    let data = await usersAPI.getUsers(page, pageSize)\r\n            dispatch (toggleIsFetching(false));\r\n            dispatch (setUsers(data.items));\r\n            dispatch (setTotalUsersCount(data.totalCount));\r\n}\r\n}\r\n\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch (toggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode == 0) {\r\n        dispatch (actionCreator(userId));\r\n    }\r\n    dispatch (toggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId,usersAPI.unfollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer;","import React, {useState} from \"react\";\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];    //сщхдаем массив\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize) // берем общее кол-во страниц pagesCount и делим ее на размер порции portionSize и получаем кол-во порций portionCount\r\n    let [portionNumber, setPortionNumber] = useState(1) // будем хранить первую порцию и ф-ю setPortionNumber, к-я меняет portionNumber\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1\r\n    let rightPortionPageNumber = portionNumber * portionSize\r\n\r\n\r\n    return <div className={styles.paginator}>\r\n        {portionNumber > 1 &&\r\n            <button onClick={() => {\r\n                setPortionNumber(portionNumber - 1) //показывай кнопку влево PREV, в том случае, если PortionNumber больше единицы .. И внутри этой кнопки вешаем онклик и говорим, setPortionNumber установи (setPortionNumber ПРИШЛА ИЗ ХУКА useState) номер порции = порция текущая portionNumber - 1\r\n            }}> PREV </button>}\r\n\r\n        {pages\r\n            .filter (p => p >= leftPortionPageNumber && p <= rightPortionPageNumber) //отрисовать только те страницы p, к-у больше или = левой границы и меньше или = правой границы\r\n            .map((p) => {\r\n            return <span className={cn ({\r\n            [styles.selectedPage]: currentPage === p\r\n        }, styles.pageNumber)}\r\n            key={p}\r\n            onClick={(e) => {\r\n            onPageChanged(p)\r\n        }}>{p}</span>\r\n        })}\r\n        {portionCount > portionNumber &&     //кнопка вправо показ-ся, когда кол-во порций portionCount больше, чем кол-во текущей порции, к-ю мы показываем portionNumber\r\n            <button onClick={() => {       //если стрелка вправо показ-ся, то при клике на эту стрелку мы устанавливаем номер порции на 1 больше, чем та, что есть portionNumber + 1\r\n            setPortionNumber(portionNumber + 1)\r\n        }}> NEXT </button>\r\n\r\n        }\r\n\r\n            </div>\r\n        }\r\n\r\n\r\n        export default Paginator;\r\n\r\n\r\n{/*        <div>*/}\r\n{/*            {u.followed*/}\r\n{/*        ? <button disabled={props.followingInProgress.some(id=>id===u.id)} onClick={() => {*/}\r\n{/*            props.toggleFollowingProgress(true, u.id)*/}\r\n{/*            usersAPI.unfollow(u.id)*/}\r\n{/*            axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {*/}\r\n{/*                withCredentials: true,*/}\r\n{/*                headers: {*/}\r\n{/*                    \"API-KEY\":\"2eaa3d4d-4cb9-4146-871a-19abe3a12269\"*/}\r\n{/*                }*/}\r\n{/*            })*/}\r\n{/*                .then(responce => {*/}\r\n{/*                    if (responce.data.resultCode == 0) {*/}\r\n{/*                        props.unfollow(u.id);*/}\r\n{/*                    }*/}\r\n{/*                    props.toggleFollowingProgress(false, u.id)*/}\r\n{/*                });*/}\r\n\r\n{/*}}> Unfollow </button>*/}\r\n{/*: <button disabled={props.followingInProgress.some(id=>id===u.id)} onClick={() => {*/}\r\n{/*props.toggleFollowingProgress(true, u.id)*/}\r\n{/*usersAPI.follow(u.id)*/}\r\n\r\n{/*axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, {*/}\r\n{/*    withCredentials: true,*/}\r\n{/*    headers: {*/}\r\n{/*        \"API-KEY\":\"2eaa3d4d-4cb9-4146-871a-19abe3a12269\"*/}\r\n{/*    }*/}\r\n{/*})*/}\r\n{/*    .then(responce => {*/}\r\n{/*        if (responce.data.resultCode == 0) {*/}\r\n{/*            props.follow(u.id);*/}\r\n{/*        }*/}\r\n{/*        props.toggleFollowingProgress(false, u.id)*/}\r\n{/*    });*/}\r\n{/*        }}> Follow </button>}*/}\r\n{/*</div>*/}","import React from \"react\";\r\nimport styles from \"./users.module.css\";\r\nimport userPhoto from \"../../assets/images/user.png\";\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n\r\nreturn        <div>\r\n                <span>\r\n                    <div>\r\n                        <NavLink to={'./../profile/' + user.id}>\r\n                        <img src={user.photos.small != null ? user.photos.small : userPhoto} className={styles.userPhoto}/>\r\n                            </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        {user.followed\r\n                            ? <button disabled={followingInProgress.some(id=>id===user.id)} onClick={() => {unfollow(user.id)}}> Unfollow </button>\r\n                            : <button disabled={followingInProgress.some(id=>id===user.id)} onClick={() => {follow(user.id)}}> Follow </button>}\r\n                </div>\r\n                     </span>\r\n            <span>\r\n                    <span>\r\n                      <div> {user.name}</div>\r\n                        <div> {user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                    <div>{\"user.location.country\"}</div>\r\n                    <div>{\"user.location.city\"}</div>\r\n                    </span>\r\n                </span>\r\n\r\n        </div>\r\n}\r\n\r\n\r\nexport default User\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// <div>\r\n// {u.followed\r\n//         ? <button disabled={props.followingInProgress.some(id=>id===u.id)} onClick={() => {\r\n//             props.toggleFollowingProgress(true, u.id)\r\n//             usersAPI.unfollow(u.id)\r\n//             axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {\r\n//                 withCredentials: true,\r\n//                 headers: {\r\n//                     \"API-KEY\":\"2eaa3d4d-4cb9-4146-871a-19abe3a12269\"\r\n//                 }\r\n//             })\r\n//                 .then(responce => {\r\n//                     if (responce.data.resultCode == 0) {\r\n//                         props.unfollow(u.id);\r\n//                     }\r\n//                     props.toggleFollowingProgress(false, u.id)\r\n//                 });\r\n\r\n        // }}> Unfollow </button>\r\n        // : <button disabled={props.followingInProgress.some(id=>id===u.id)} onClick={() => {\r\n            // props.toggleFollowingProgress(true, u.id)\r\n            // usersAPI.follow(u.id)\r\n\r\n            // axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, {\r\n            //     withCredentials: true,\r\n            //     headers: {\r\n            //         \"API-KEY\":\"2eaa3d4d-4cb9-4146-871a-19abe3a12269\"\r\n            //     }\r\n            // })\r\n            //     .then(responce => {\r\n            //         if (responce.data.resultCode == 0) {\r\n            //             props.follow(u.id);\r\n            //         }\r\n            //         props.toggleFollowingProgress(false, u.id)\r\n            //     });\r\n//         }}> Follow </button>}\r\n// </div>","import React from \"react\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({pageSize, totalItemsCount, totalUsersCount, currentPage, onPageChanged, users, ...props}) => {\r\n\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged} totalItemsCount={totalUsersCount}\r\n                   pageSize={pageSize}/>\r\n        <div>\r\n            {users.map(u => <User user={u}\r\n                                  followingInProgress={props.followingInProgress}\r\n                                  unfollow={props.unfollow}\r\n                                  follow={props.follow}\r\n                                  key={u.id}/>)\r\n            }\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users\r\n\r\n\r\n// <div>\r\n// {u.followed\r\n//         ? <button disabled={props.followingInProgress.some(id=>id===u.id)} onClick={() => {\r\n//             props.toggleFollowingProgress(true, u.id)\r\n//             usersAPI.unfollow(u.id)\r\n//             axios.delete(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {\r\n//                 withCredentials: true,\r\n//                 headers: {\r\n//                     \"API-KEY\":\"2eaa3d4d-4cb9-4146-871a-19abe3a12269\"\r\n//                 }\r\n//             })\r\n//                 .then(responce => {\r\n//                     if (responce.data.resultCode == 0) {\r\n//                         props.unfollow(u.id);\r\n//                     }\r\n//                     props.toggleFollowingProgress(false, u.id)\r\n//                 });\r\n\r\n// }}> Unfollow </button>\r\n// : <button disabled={props.followingInProgress.some(id=>id===u.id)} onClick={() => {\r\n// props.toggleFollowingProgress(true, u.id)\r\n// usersAPI.follow(u.id)\r\n\r\n// axios.post(`https://social-network.samuraijs.com/api/1.0/follow/${u.id}`, {}, {\r\n//     withCredentials: true,\r\n//     headers: {\r\n//         \"API-KEY\":\"2eaa3d4d-4cb9-4146-871a-19abe3a12269\"\r\n//     }\r\n// })\r\n//     .then(responce => {\r\n//         if (responce.data.resultCode == 0) {\r\n//             props.follow(u.id);\r\n//         }\r\n//         props.toggleFollowingProgress(false, u.id)\r\n//     });\r\n//         }}> Follow </button>}\r\n// </div>","\r\n//селектор в данном случае достают из стейта какие-то данные\r\n\r\n\r\nimport {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {  //примитивный селектор, который возвращает из стейта юзеров\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsers = createSelector (getUsersSelector, (users)=>{   //селектор, который занимается фильтрацией. внутри createSelector передаем ф-ю, которая будет что-то выбирать из стейта. сюда придут юзеры из более примитивного селектора. первым параметром передаем тот селектор getUsersSelector, который будет исполььзоваться, чтобы получить значения юзерс, чтобы потом закинуть их сюда же (users)\r\n    return users.filter(u=>true)   //логика селектора\r\n})\r\n\r\n// export const getUsersSuperSelector = createSelector (getUsers,(users)=>{     //внутри createSelector передаем ф-ю, которая будет что-то выбирать из стейта. сюда придут юзеры из более примитивного селектора. первым параметром передаем тот селектор getUsers, который будет исполььзоваться, чтобы получить значения юзерс, чтобы потом закинуть их сюда же (users)\r\n//     return users.filter(u=>true)   //логика селектора\r\n// })\r\n\r\n\r\n\r\n// export const getUsers = (state) => {\r\n//     return state.usersPage.users\r\n// }\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\n","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPages,\r\n    unfollow, toggleFollowingProgress, requestUsers\r\n} from '../../redax/users-reducer';\r\nimport Users from './Users';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redax/users-selectors\";\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    // constructor(props) {\r\n    //     super(props);\r\n    //         }\r\n\r\n    componentDidMount() {\r\n        const {currentPage,pageSize} = this.props\r\n        this.props.requestUsers(currentPage, pageSize);\r\n\r\n        // this.props.toggleIsFetching(true);\r\n        // usersAPI.getUsers(this.props.currentPage, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items);\r\n        //         this.props.setTotalUsersCount(data.totalCount);\r\n        //     });\r\n    };\r\n\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props\r\n        this.props.requestUsers(pageNumber, pageSize);\r\n        // this.props.setCurrentPages(pageNumber);\r\n        // this.props.toggleIsFetching(true);\r\n        // usersAPI.getUsers(pageNumber, this.props.pageSize)\r\n        //     .then(data => {\r\n        //         this.props.toggleIsFetching(false);\r\n        //         this.props.setUsers(data.items)\r\n        //     });\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isFetching ? <Preloader />: null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                      pageSize={this.props.pageSize}\r\n                      currentPage={this.props.currentPage}\r\n                      onPageChanged={this.onPageChanged}\r\n                      users={this.props.users}\r\n                      follow={this.props.follow}\r\n                      unfollow={this.props.unfollow}\r\n                   // toggleFollowingProgress={this.props.toggleFollowingProgress}\r\n                   followingInProgress={this.props.followingInProgress}\r\n        />\r\n        </>\r\n    }\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return {\r\n//         users: state.usersPage.users,\r\n//         pageSize: state.usersPage.pageSize,\r\n//         totalUsersCount: state.usersPage.totalUsersCount,\r\n//         currentPage: state.usersPage.currentPage,\r\n//         isFetching: state.usersPage.isFetching,\r\n//         followingInProgress: state.usersPage.followingInProgress\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {  //срабатывает всегда\r\n    return {\r\n        // users: getUsersSuperSelector(state),\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\n// let mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         follow: (userId) => {\r\n//             dispatch(followAC(userId))\r\n//         },\r\n//         unfollow: (userId) => {\r\n//             dispatch(unfollowAC(userId))\r\n//         },\r\n//         setUsers: (users) => {\r\n//             dispatch(setUsersAC(users))\r\n//         },\r\n//         setCurrentPage: (pageNumber) => {\r\n//             dispatch(setCurrentPagesAC(pageNumber))\r\n//         },\r\n//         setTotalUsersCount: (totalCount) => {\r\n//             dispatch(setUsersTotalCountAC(totalCount))\r\n//         },\r\n//         toggleIsFetching: (isFetching) => {\r\n//             dispatch(toggleIsFetchingAC(isFetching))\r\n//         }\r\n//     }\r\n// }\r\n\r\n\r\n// export default withAuthRedirect (connect(mapStateToProps,\r\n//     {follow, unfollow,\r\n//         setCurrentPages, toggleFollowingProgress, getUsers}) (UsersContainer));\r\n\r\nexport default compose(\r\n    // withAuthRedirect, //защищаем. тип пока не залогинился. не зайдешь\r\n    connect(mapStateToProps,\r\n        {follow, unfollow,\r\n            setCurrentPages, toggleFollowingProgress, requestUsers: requestUsers})\r\n)(UsersContainer)","import React from \"react\";\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    return <header className={s.header}>\r\n        <img src='https://i.pinimg.com/originals/18/07/e0/1807e0e5111a9f4835f6997cf93827c2.png' />\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div> {props.login} - <button onClick={props.logout}>Log out</button></div> :\r\n        <NavLink to={'/login'}>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header","import {authAPI} from \"../api/api\";\r\n// import {stopSubmit} from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'samurai-network/auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n};\r\n\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload, //в payload имеется в виду true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: {id, email, login, isAuth}\r\n}) //у нас есть редьюсер, акшн креатор, он диспатчит акш. в этом акш сидят id, email, login, isAuth\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me()   //возвращаем промис\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n    ;\r\n}\r\n\r\n\r\n//\r\n// export const getAuthUserData = () => (dispatch) => {\r\n//     return authAPI.me()   //возвращаем промис\r\n//         .then(response => {\r\n//             if (response.data.resultCode === 0) {\r\n//                 let {id, email, login} = response.data.data;\r\n//                 dispatch (setAuthUserData (id, email, login, true));\r\n//             }\r\n//         });\r\n// }\r\n\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => { //логинимся\r\n    let response = await authAPI.login(email, password, rememberMe)\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getAuthUserData())\r\n            }\r\n            // else {\r\n            //let message = response.data.message.length>0 ? response.data.message[0]:\"some error\"                                    //если длина месендж больше 0, то мы в качестве месенджа, который покажем на форуме возьмем первоенулевое смс, иначе покажем соме еррор\r\n            //dispatch(stopSubmit(\"login\", {error: message}))\r\n            // }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {  //вылогинились\r\n    let response = await authAPI.logout()\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setAuthUserData(null, null, null, false));\r\n            }\r\n}\r\n\r\nexport default authReducer;","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport { logout} from \"../../redax/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n    return <Header {...this.props}/>\r\n}}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login,\r\n})\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer)","import React from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redax/auth-reducer\";\r\nimport {Navigate} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\nimport {createField} from \"../common/FormsControls/FormsControls\";\r\n\r\nconst LoginForm = (error) => {\r\n    return (\r\n        <form>\r\n            <div>\r\n                <input placeholder={\"Email\"} />\r\n            </div>\r\n            <div>\r\n                <input placeholder={\"Password\"} />\r\n            </div>\r\n            <div>\r\n                <input type={\"checkbox\"}/>remember me\r\n            </div>\r\n            {error && <div className={style.formSummaryError}> //если придет ошибка, то покажи на сайте уведомление error\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\n\r\nconst Login = (props) => {\r\n\r\n    const onSubmit = (formData) => {\r\n         props.login (formData.email,formData.password, formData.rememberMe )}\r\n\r\n    // if (!props.isAuth) return <Navigate to={\"/profile\"}/>\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n       <LoginForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\n // const mapStateToProps = (state) =>({\r\n //     isAuth:state.auth.isAuth\r\n // })\r\n\r\nexport default connect (null, {login})(Login); //колбэк отдельно, который внутри диспатчит вызов санккреатора\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React from 'react'\r\n// import {Field, reduxForm} from \"redux-form\"\r\n//\r\n// const LoginForm = ({handleSubmit, error}) => {\r\n//     return (\r\n//         <form onSubmit={handleSubmit}>\r\n// {createField (\"Email\", \"email\", [required], Input)}\r\n// {createField (\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n// {createField (null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n// {error && <div className={style.formSummaryError}> //если придет ошибка, то покажи на сайте уведомление error\r\n//     {error}\r\n// </div>\r\n// }\r\n//             <div>\r\n//                 <button>Login</button>\r\n//             </div>\r\n//         </form>\r\n//     )\r\n// }\r\n//\r\n// const LoginReduxForm = reduxForm ({form: 'login'})(LoginForm)\r\n//\r\n// const Login = () => {\r\n//     const onSubmit = (formData) => {\r\n//         props.login (formData.email,formData.password, formData.rememberMe )\r\n//     }\r\n//  if (!props.isAuth) return <Navigate to={\"/profile\"}/>\r\n// }\r\n//     return <div>\r\n//         <h1>LOGIN</h1>\r\n//         <LoginReduxForm onSubmit={onSubmit}/>\r\n//     </div>\r\n// }\r\n//\r\n\r\n// const mapStateToProps = (state) =>({\r\n//     isAuth:state.auth.isAuth\r\n// })\r\n//\r\n// export default connect (mapStateToProps, {login})(Login)","\r\n\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n// import {stopSubmit} from \"redux-form\"\r\n\r\nconst INITIALIZED_SUCCESS= 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false   //сначала приложение неинициализировано\r\n};\r\n\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true //делаем копию стейта и меняем initialized\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS}) //у нас есть редьюсер, акшн креатор, он диспатчит акш. в этом акш сидят id, email, login, isAuth\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData())  //диспатчим получение авторизационных данных // и когда данные будут получены, то мы д. задипатчить initializedSuccess\r\n    Promise.all([promise])  //перечисляем все промисы, которые будут идти параллельно. дождались и проинициализировались\r\n        .then(()=>{\r\n        dispatch(initializedSuccess())\r\n    })\r\n}\r\n\r\n\r\nexport default appReducer;","\r\nlet initialState = {\r\n\r\n}\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n\r\n    return state\r\n\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, legacy_createStore as createStore} from \"redux\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage:profileReducer,\r\n    dialogsPage:dialogsReducer,\r\n    sidebar:sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app:appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;     //сторе с расширением от гуглхром\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// let store = createStore (reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.__store__ = store;\r\n\r\nexport default store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//\r\n// import {applyMiddleware, combineReducers, legacy_createStore as createStore} from \"redux\";\r\n// import dialogsReducer from \"./dialogs-reducer\";\r\n// import profileReducer from \"./profile-reducer\";\r\n// import sidebarReducer from \"./sidebar-reducer\";\r\n// import usersReducer from \"./users-reducer\";\r\n// import authReducer from \"./auth-reducer\";\r\n// import thunkMiddleware from \"redux-thunk\";\r\n// import {reducer as formReducer} from 'redux-form';\r\n//\r\n//\r\n// let reducers = combineReducers({\r\n//     profilePage:profileReducer,\r\n//     dialogsPage:dialogsReducer,\r\n//     sidebar:sidebarReducer,\r\n//     usersPage: usersReducer,\r\n//     auth: authReducer,\r\n//     form: formReducer\r\n// });\r\n//\r\n// let store = createStore (reducers, applyMiddleware(thunkMiddleware));\r\n//\r\n// window.store = store;\r\n//\r\n// export default store;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport Preloader from \"../components/common/Preloader/Preloader\";\r\n\r\n\r\nexport const withSuspense = (Component) => {\r\n\r\n\r\n    return (props)=>{\r\n        return <React.Suspense fallback={<Preloader/>}>\r\n            <section>\r\n                <Component {...props}/>\r\n            </section>\r\n        </React.Suspense>\r\n    }\r\n}","import React from \"react\";\nimport './App.css';\nimport Navbar from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, Route, Routes, useLocation, useNavigate, useParams} from \"react-router-dom\";\n\nimport UsersContainer from \"./components/Users/UsersContainer\";\n// import ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initializeApp} from \"./redax/app-reducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redax/redux-store\";\nimport {withSuspense} from \"./hoc/withSuspense\";\n\n // import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer')); //ленивая загрузка\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer')); //ленивая загрузка\nconst DialogContainerWithSuspense = withSuspense(DialogsContainer)\nconst ProfileContainerWithSuspense = withSuspense(ProfileContainer)\n\nfunction withRouter(Component) {\n    function ComponentWithRouterProp(props) {\n        let location = useLocation();\n        let navigate = useNavigate();\n        let params = useParams();\n        return (\n            <Component\n                {...props}\n                router={{ location, navigate, params }}\n            />\n        );\n    }\n    return ComponentWithRouterProp;\n}\n\nclass App extends React.Component {\n\n    componentDidMount() {\n        this.props.initializeApp ()\n    }\n\n    render() {\n        if (!this.props.initialized) {//если мы не проинициализированы, то покажи прелоудер\n\n        return  <Preloader/> } //мы будем возвращать разметку только когда проинициализировались\n\n        return (\n\n            <div className={'app-wrapper'}>\n                <HeaderContainer/>\n                <Navbar/>\n                <div className={'app-wrapper-content'}>\n                    {/*<React.Suspense fallback={<Preloader/>}>*/}\n                    {/*    <section>*/}\n                    <Routes>\n                        {/*<Route path='/dialogs' element={<DialogsContainer/>}/>*/}\n                        <Route path='/dialogs' element={<DialogContainerWithSuspense/>}/>\n                        <Route path='/profile/*' element={<ProfileContainerWithSuspense/>}/>\n                        <Route path='/profile/:userId' element={<ProfileContainer/>}/>\n                        {/*<Route path='/:userId?' element={<ProfileContainer />}/>*/}\n                        <Route path='/users' element={<UsersContainer/>}/>\n                        <Route path='/login' element={<Login/>}/>\n                    </Routes>\n                    {/*    </section>*/}\n                    {/*</React.Suspense>*/}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized  //наш апп получ инфу инцилизировано или нет\n})\n\nlet AppContainer = compose(\n    withRouter,\n    // withAuthRedirect,\n    connect(mapStateToProps, {initializeApp})\n)(App)\n\n\nconst SamuraiJSApp = (props) => {\n   return <BrowserRouter>\n        <Provider store={store}>\n            <AppContainer/>\n        </Provider>\n    </BrowserRouter>\n}\n export default SamuraiJSApp\n\n\n\n\n\n// import React from \"react\";\n// import './App.css';\n// import Header from \"./components/Header/Header\";\n// import Navbar from \"./components/Navbar/Navbar\";\n// import Profile from \"./components/Profile/Profile\";\n// import {BrowserRouter, Route, Routes} from \"react-router-dom\";\n// import Music from \"./components/Music/Music\";\n// import News from \"./components/News/News\";\n// import Settings from \"./components/Settings/Settings\";\n// import Sait from \"./components/Saitbar/Sait\";\n// import DialogsContainer from \"./components/Dialogs/DialogsContainer\";\n// // import {updateNewPostText} from \"./redax/store\";\n//\n// const App = (props) => {\n//\n//     return (\n//         <BrowserRouter>\n//             <div className={'app-wrapper'}>\n//                 <Header/>\n//                 <Navbar/>\n//                 <div className={'app-wrapper-content'}>\n//                     <Routes>\n//                         {/*<Route path='/dialogs' element={<Dialogs dialogs={props.state.dialogsPage.dialogs} messages={props.state.dialogsPage.messages}/>}/>\n//                         <Route path='/profile' element={<Profile posts={props.state.profilePage.posts}/>}/>*/}\n//\n//                         <Route path='/dialogs' element={<DialogsContainer />}/>\n//                         <Route path='/profile' element={<Profile />}/>\n//                         {/*<Route path='/dialogs' element={<DialogsContainer store={props.store}/>}/>*/}\n//                         {/*<Route path='/profile' element={<Profile store={props.store}/>}/>*/}\n//                         <Route path='/news' element={<News/>}/>\n//                         <Route path='/music' element={<Music/>}/>\n//                         <Route path='/settings' element={<Settings/>}/>\n//                         <Route path='/sait' element={<Sait/>}/>\n//                     </Routes>\n//                 </div>\n//             </div>\n//         </BrowserRouter>\n//     );\n// }\n// export default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from \"./redax/redux-store\";\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport SamuraiJSApp from \"./App\";\n// import {create} from \"axios\";\n\n//добавление при помощи нативного js настоящ дом элемент\n// let h1 = document.createElement(\"h1\")  //дом элемент\n// h1.innerHTML = \"Hello\"  //нативный js элемент, объект дома настоящ\n// document.querySelector(\"body\").appendChild(h1)\n\n// setInterval(()=>{\n//     store.dispatch({type:\"FAKE\"})\n// },1000)\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n    <SamuraiJSApp/>\n);\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// let rerenderEntireTree = (state) => {\n//     root.render(\n//         <BrowserRouter>\n//             <App state={store.getState()} dispatch={store.dispatch.bind(store)} store={store}/>\n//         </BrowserRouter>\n//     );\n// }\n//\n// rerenderEntireTree(store.getState());\n//\n// store.subscribe(() => {\n//     let state = store.getState();\n//     rerenderEntireTree(state);\n// });\n//\n// store.subscribe(rerenderEntireTree);"],"sourceRoot":""}